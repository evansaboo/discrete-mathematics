(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    279923,       5954]
NotebookOptionsPosition[    257113,       5393]
NotebookOutlinePosition[    264760,       5590]
CellTagsIndexPosition[    264717,       5587]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Report Project 1 ", "Title",
 CellChangeTimes->{{3.7140537239248915`*^9, 
  3.71405372407216*^9}},ExpressionUUID->"2e086750-1cf1-4c43-bc57-\
bac07652a650"],

Cell["\<\
Course code: IX1500
Date: 2017-09-13\
\>", "Text",
 CellChangeTimes->{{3.714053693818678*^9, 
  3.7140537179509478`*^9}},ExpressionUUID->"679e81cd-23f2-4ac3-aad0-\
55498a6469d8"],

Cell["", "Text",
 CellChangeTimes->{
  3.714053721282855*^9, {3.7141333447257347`*^9, 3.714133359574506*^9}, 
   3.71428267441993*^9},ExpressionUUID->"afa24826-79d3-4461-8b2b-\
32cca5b0d79b"],

Cell[CellGroupData[{

Cell["Task 1a: Poker Probability by census method", "Subchapter",
 CellChangeTimes->{
  3.714053804012048*^9, {3.7140538517490215`*^9, 3.7140538879842343`*^9}, {
   3.714053920261175*^9, 
   3.714053927614444*^9}},ExpressionUUID->"2760ab7a-2fed-4ae4-a63f-\
890119ad5062"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.7142827170368223`*^9, 
  3.714282717132024*^9}},ExpressionUUID->"28ab532a-4f99-4328-b494-\
a8a51a0e3e70"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"4df8543c-22f8-401d-8973-c66d5fa62864"],

Cell["\<\
The first task is to calculate the exact probability of the following hands \
in a variation of a poker game:\
\>", "Text",
 CellChangeTimes->{{3.714054826069558*^9, 
  3.714054893628851*^9}},ExpressionUUID->"8ad5d4da-afa2-434b-a402-\
a9f9b705fa59"],

Cell[CellGroupData[{

Cell["one pair", "Item",ExpressionUUID->"d60a637d-81bb-43c2-ad71-8c54fb5226d9"],

Cell["two pairs", "Item",ExpressionUUID->"011f0fd9-9967-4501-8e5e-84a8fd1a10c2"],

Cell["three of a kind", "Item",ExpressionUUID->"a59ac132-dcbd-4077-91b9-c535e169b9ad"],

Cell["four of a kind", "Item",ExpressionUUID->"cd1ea2ae-e526-432b-a7a3-b43e960b2604"],

Cell["five of a kind", "Item",ExpressionUUID->"e940f617-aa4b-4725-bcf9-e3a0f8cd572c"],

Cell["full hand", "Item",ExpressionUUID->"4b1d0780-52e1-4fb4-a4c3-e737a09f80da"],

Cell["straight", "Item",ExpressionUUID->"bf2eb308-5b1f-462a-ab6d-c89ce4f1fedb"],

Cell["flush", "Item",ExpressionUUID->"59df8df0-f7a9-44ec-9ed3-3bc61b84f93d"],

Cell["straight flush", "Item",ExpressionUUID->"233665f9-6e85-4606-b8ff-7db62cb33631"],

Cell["nothing", "Item",ExpressionUUID->"99715d1d-c1ba-4f49-9b33-ece4185850b4"]
}, Open  ]],

Cell[TextData[{
 "To calculate the exact probability  we will be using the census method.\n\
The poker game consists of the cards ",
 Cell[BoxData[
  FormBox[
   RowBox[{"8", ",", "9", ",", "10", ",", "J", ",", "Q", ",", "K", ",", "A"}],
    TraditionalForm]],ExpressionUUID->"efe0683b-000a-4dc7-86f2-bbc77cb650c4"],
 " from two decks to construct sets of five playing cards. If one of the hand \
does contain more than one rank then the highest rank is considered e.g. if \
we want to calculate the probability of three of a kind and one of hands \
contains one pair, two pairs, three of a kind and full hand then the highest \
rank (full hand) is considered."
}], "Text",
 CellChangeTimes->{{3.7140549325168395`*^9, 3.71405497959274*^9}, {
  3.714055130520317*^9, 3.7140551312796535`*^9}, {3.7140551861663775`*^9, 
  3.714055213555002*^9}, {3.714055254177896*^9, 3.7140553638658323`*^9}, {
  3.714055400561429*^9, 3.7140555196344337`*^9}, {3.7140555552198205`*^9, 
  3.714055803783145*^9}, {3.7140558442160053`*^9, 3.7140558775767045`*^9}, {
  3.71405591280521*^9, 3.714055915501329*^9}, {3.7142502813048024`*^9, 
  3.7142502824248943`*^9}},ExpressionUUID->"6dafbe40-4c16-4c8f-b5a2-\
46153cbc8c47"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsection",ExpressionUUID->"39a0ef6c-6a2c-4081-9062-84513a76c571"],

Cell["\<\
We have constructed below a table which shows the probability for each poker \
rank, from the lowest to the highest rank. \
\>", "Text",
 CellChangeTimes->{{3.714211647286872*^9, 3.714211781958235*^9}, {
  3.7142118467546334`*^9, 3.7142118713966584`*^9}, {3.7142502918015227`*^9, 
  3.7142503188080673`*^9}},ExpressionUUID->"6b796b68-57a1-44af-8380-\
a121bba6de31"],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  TagBox[
   TagBox[GridBox[{
      {"Hand", "Probability", 
       RowBox[{"Probability", ",", "%"}]},
      {
       RowBox[{"One", " ", "pair"}], 
       FractionBox["11920", "22737"], "52.426"},
      {
       RowBox[{"Two", " ", "pair"}], 
       FractionBox["1305", "7579"], "17.219"},
      {
       RowBox[{"Three", " ", "of", " ", "a", " ", "kind"}], 
       FractionBox["2240", "22737"], "9.852"},
      {
       RowBox[{"Four", " ", "of", " ", "a", " ", "kind"}], 
       FractionBox["140", "22737"], "0.616"},
      {
       RowBox[{"Five", " ", "of", " ", "a", " ", "kind"}], 
       FractionBox["7", "68211"], "0.01"},
      {
       RowBox[{"Full", " ", "hand"}], 
       FractionBox["392", "22737"], "1.724"},
      {"Straight", 
       FractionBox["1360", "53053"], "2.563"},
      {"Flush", 
       FractionBox["953", "477477"], "0.200"},
      {
       RowBox[{"Straight", " ", "flush"}], 
       FractionBox["16", "159159"], "0.01"},
      {"Nothing", 
       FractionBox["8160", "53053"], "15.381"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    {None, OutputFormsDump`HeadedColumns}],
   Function[BoxForm`e$, 
    TableForm[
    BoxForm`e$, 
     TableHeadings -> {
      None, {"\!\(\*\nStyleBox[\"x\",\nFontSlant->\"Italic\"]\) [m]", 
        "\!\(\*\nStyleBox[\"h\",\nFontSlant->\"Italic\"]\) [m]", 
        "\!\(\*\nStyleBox[\"a\",\nFontSlant->\"Italic\"]\) \
[\!\(\*SuperscriptBox[\(m\), \(2\)]\)]"}}]]]],
  ShowCellBracket->Automatic,ExpressionUUID->
  "55f7f95b-1382-4742-b322-ea3ab4de759f"]
}], "Text",
 CellChangeTimes->{{3.714133940689598*^9, 3.714133981607645*^9}, {
   3.7141340222146873`*^9, 3.714134278716775*^9}, {3.714134396113729*^9, 
   3.714134452612259*^9}, {3.7142048627685194`*^9, 3.7142049032398005`*^9}, {
   3.714204996456719*^9, 3.714205000159789*^9}, {3.714205037325588*^9, 
   3.7142051192079287`*^9}, {3.714211353101102*^9, 3.7142113635022907`*^9}, {
   3.714211407569476*^9, 3.7142114729770994`*^9}, {3.7142115542717085`*^9, 
   3.714211554502921*^9}, {3.714211607050908*^9, 3.7142116338872046`*^9}, {
   3.7142369459819884`*^9, 3.7142369553771224`*^9}, {3.7142435321695733`*^9, 
   3.714243532375121*^9}, 3.714245551172263*^9, {3.714371709480832*^9, 
   3.714371798274395*^9}, {3.7144710595770073`*^9, 3.714471090292883*^9}, {
   3.714550001472767*^9, 
   3.714550034398815*^9}},ExpressionUUID->"c105b4fe-e9bc-45df-add0-\
d8d5ef5c8e04"],

Cell["", "Text",ExpressionUUID->"ebfbcb7d-c52e-4b9c-8db8-a0cbeb58f370"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating poker Probability by census method", "Section",
 CellChangeTimes->{{3.714054116831329*^9, 3.714054134053959*^9}, {
  3.71405437675758*^9, 
  3.7140544522465525`*^9}},ExpressionUUID->"6943093f-8a76-4b29-9b2d-\
76d8c3875b28"],

Cell[TextData[{
 "By using the census method we can estimate the exact probability of each \
rank in a poker game.\n   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"|", "a", "|"}], 
     RowBox[{"|", "h", "|"}]], "=", " ", 
    RowBox[{"probability", " ", "of", " ", "a", " ", "in", " ", "h"}]}], 
   TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->20,ExpressionUUID->"bc43cb36-ed55-4705-a6cb-7248ceec2515"],
 "\n\[LineSeparator] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "a", "|", " ", 
    RowBox[{
    "is", " ", "the", " ", "amount", " ", "of", " ", "possibilites", " ", 
     "you", " ", "can", " ", "get", " ", "on", " ", "the", " ", "total", " ", 
     "amount"}], " ", "|", "h", "|"}], TraditionalForm]],ExpressionUUID->
  "63662774-7ab4-4db7-8344-482a5fb13905"],
 " \n \n\[LineSeparator]First we construct the 5 cards ",
 Cell[BoxData[
  FormBox[
   RowBox[{"8", ",", "9", ",", "10", ",", "J", ",", "Q", ",", "K", ",", "A"}],
    TraditionalForm]],ExpressionUUID->"1ce6e8b2-9bf2-49df-9e9d-933b2fd7a7a5"],
 " with their respective colors. Every card has 4 distinct colors (Red,  \
Black, Green, Blue), which means that we have to separate them by distinct \
numbers. This is the the result we get for one deck:\[LineSeparator]\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "108", ",", "109", ",", "110", ",", "111", ",", "112", ",", "113", ",",
         "114"}], "}"}], ",", "\[LineSeparator]", 
      RowBox[{"{", 
       RowBox[{
       "208", ",", "209", ",", "210", ",", "211", ",", "212", ",", "213", ",",
         "214"}], "}"}], ",", "\[LineSeparator]", 
      RowBox[{"{", 
       RowBox[{
       "308", ",", "309", ",", "310", ",", "311", ",", "312", ",", "313", ",",
         "314"}], "}"}], ",", "\[LineSeparator]", 
      RowBox[{"{", 
       RowBox[{
       "408", ",", "409", ",", "410", ",", "411", ",", "412", ",", "413", ",",
         "414"}], "}"}]}], "}"}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "8a1d14e0-9715-46a2-b10d-2e1635073a77"],
 "\n\nWe represent the hundreds digit as the color and the two last sub \
values as the cards value, e.g. the card 108 has the color Red and has the \
card value 8 while the card 208 has the same card value but not the same \
color.\n\nWe construct another identical deck and join it with the first deck \
to get a every value we need from the two deck in one set:\[LineSeparator]\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"{", 
     RowBox[{
     "108", ",", "108", ",", "109", ",", "109", ",", "110", ",", "110", ",", 
      "111", ",", "111", ",", "112", ",", "112", ",", "113", ",", "113", ",", 
      "114", ",", "114", ",", "\[LineSeparator]", "208", ",", "208", ",", 
      "209", ",", "209", ",", "210", ",", "210", ",", "211", ",", "211", ",", 
      "212", ",", "212", ",", "213", ",", "213", ",", "214", ",", "214", ",", 
      "\[LineSeparator]", "308", ",", "308", ",", "309", ",", "309", ",", 
      "310", ",", "310", ",", "311", ",", "311", ",", "312", ",", "312", ",", 
      "313", ",", "313", ",", "314", ",", "314", ",", "\[LineSeparator]", 
      "408", ",", "408", ",", "409", ",", "409", ",", "410", ",", "410", ",", 
      "411", ",", "411", ",", "412", ",", "412", ",", "413", ",", "413", ",", 
      "414", ",", "414"}], "}"}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "13af8f1e-2d2e-46ef-89c1-fc4f82b51f96"],
 "\n\nWe also sorted the set above in numerical order to calculate the \
probability for each rank without adding extra condition to each calculation.\
\n\nThe last step is to generate all possible hands with five card in each \
hand:\[LineSeparator]\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"108", ",", "108", ",", "109", ",", "109", ",", "110"}], "}"}],
       ",", "\[LineSeparator]", 
      RowBox[{"{", 
       RowBox[{"108", ",", "108", ",", "109", ",", "109", ",", "110"}], "}"}],
       ",", "\[LineSeparator]", 
      RowBox[{"\[LeftSkeleton]", "3819813", "\[RightSkeleton]"}], ",", 
      "\[LineSeparator]", 
      RowBox[{"{", 
       RowBox[{"412", ",", "413", ",", "413", ",", "414", ",", "414"}], 
       "}"}]}], "}"}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "cbab7aba-79aa-4ae5-8edd-dc44572ff795"],
 "\n   \n The total possible hands we can get is ",
 StyleBox["3 819 816",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 ". "
}], "Text",
 CellChangeTimes->{{3.7142135111488857`*^9, 3.7142135686513653`*^9}, {
   3.714213641140631*^9, 3.7142136649555693`*^9}, {3.714213699689909*^9, 
   3.7142137789820232`*^9}, {3.7142138154882317`*^9, 
   3.7142138256317096`*^9}, {3.714213857680372*^9, 3.714213915740301*^9}, {
   3.7142139486900454`*^9, 3.7142139886446342`*^9}, {3.714214059846226*^9, 
   3.7142141293719997`*^9}, {3.7142141965539155`*^9, 3.714214827541622*^9}, {
   3.7142149429216204`*^9, 3.714215014172151*^9}, {3.7142151549758005`*^9, 
   3.714215197296553*^9}, {3.7142407785225267`*^9, 3.7142409275096273`*^9}, 
   3.7142469993144217`*^9, {3.714247582037161*^9, 3.7142479220326023`*^9}, {
   3.7142480090135117`*^9, 3.714248188477536*^9}, {3.7142503596311083`*^9, 
   3.7142504313758297`*^9}, {3.71425046776791*^9, 3.714250555314618*^9}, 
   3.714250687442446*^9, 3.7142507318989787`*^9, {3.7142511444361024`*^9, 
   3.714251175991446*^9}},ExpressionUUID->"da7bd261-22e6-4ee2-ac49-\
4c4d2217f0eb"],

Cell[CellGroupData[{

Cell["One pair", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 
  3.714213074394807*^9}},ExpressionUUID->"c43ba815-6664-44c3-ac2c-\
bda286367b3a"],

Cell[TextData[{
 "To calculate the probability for getting lowest rank ",
 StyleBox["one pair", "Code"],
 ", we constructed a function called ",
 StyleBox["pairQ", "Input"],
 " to sum up all generated hands which contains one pair. We excluded all the \
colors from every card to check if the two cards are identical.\nWe also \
excluded all the hands which contains; two pairs, three of a kind and flush, \
because we want to filter out every rank higher than one pair. There are even \
higher ranked poker hands which we want to filter out but we don\
\[CloseCurlyQuote]t need to because our filtered ranks already covers the \
higher ranks, e.g. one of a kind filters also four and five of a kind. The \
same principle is used when calculating the probability of almost every rank. \
  \n\nThe total amount of hands which only contains one pair is ",
 StyleBox["2 002 560",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 ". \nBy dividing the total number of hands containing one pair with the \
total possible hands we get the exact probability of one pair:\n\
\[LineSeparator]",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["11920", "22737"], "\[TildeTilde]", " ", 
     RowBox[{"52.426", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "a7d409eb-b7e1-44b5-9544-d5e521746430"]
}], "Text",
 CellChangeTimes->{{3.714216186472386*^9, 3.714216196551975*^9}, {
  3.71421629918511*^9, 3.7142163438752007`*^9}, {3.714216429493299*^9, 
  3.714216500533051*^9}, {3.714216700140335*^9, 3.714216750135684*^9}, {
  3.7142167816736093`*^9, 3.7142167831074147`*^9}, {3.714216867312608*^9, 
  3.7142169910812263`*^9}, {3.7142170267307625`*^9, 3.7142170335308466`*^9}, {
  3.71421714091183*^9, 3.714217149358836*^9}, {3.7142334105487814`*^9, 
  3.714233445647017*^9}, {3.7142334865428514`*^9, 3.7142335963874817`*^9}, {
  3.714233645546721*^9, 3.71423373635391*^9}, {3.714240743097275*^9, 
  3.714240763326598*^9}, {3.7142506265718727`*^9, 3.7142506272250285`*^9}, {
  3.7142506979109216`*^9, 3.7142507411480656`*^9}, {3.7142507825907946`*^9, 
  3.714250784514839*^9}, {3.71425085926832*^9, 3.714251074435647*^9}, {
  3.7142511177334695`*^9, 3.7142511272187133`*^9}, {3.714251202993284*^9, 
  3.7142512222215533`*^9}},ExpressionUUID->"be16eaa7-812d-4218-8848-\
1190357c7d02"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two pairs", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 3.714213074394807*^9}, {3.714217098557069*^9, 
  3.7142170997239885`*^9}},ExpressionUUID->"e86980e4-07dc-49ee-8d9f-\
086624e8e182"],

Cell[TextData[{
 "The second lowest poker rank is two pair. We defined another function for \
two pairs and checked every possible hand by filtering out all hands which \
contains two pairs and doesn\[CloseCurlyQuote]t contain higher rank than our \
current rank.\n\nThe total amount of hands which only contains two pairs is \
438 480. \nThe total number of possibilities of two pairs divided by the \
total number of hands is the probability of the current rank:\n\
\[LineSeparator]",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["1305", "7579"], "\[TildeTilde]", " ", 
     RowBox[{"17.219", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "783f2450-2a09-4c9d-98bd-f0b0f656f656"]
}], "Text",
 CellChangeTimes->{{3.714216186472386*^9, 3.714216196551975*^9}, {
   3.71421629918511*^9, 3.7142163438752007`*^9}, {3.714216429493299*^9, 
   3.714216500533051*^9}, {3.714216700140335*^9, 3.714216750135684*^9}, {
   3.7142167816736093`*^9, 3.7142167831074147`*^9}, {3.714216867312608*^9, 
   3.7142169910812263`*^9}, {3.7142170267307625`*^9, 
   3.7142170335308466`*^9}, {3.7142171087755585`*^9, 3.714217127999078*^9}, 
   3.7142171696975994`*^9, {3.7142321027836385`*^9, 3.7142323029120817`*^9}, {
   3.7142323563543835`*^9, 3.714232419908722*^9}, {3.714233185450037*^9, 
   3.714233359194971*^9}, {3.7142339558392572`*^9, 3.7142339597537627`*^9}, {
   3.7142407172438736`*^9, 3.7142407352586155`*^9}, {3.7142514517380066`*^9, 
   3.714251452464073*^9}, {3.714251499534546*^9, 3.7142515700774856`*^9}, {
   3.7147274458620596`*^9, 
   3.714727457570647*^9}},ExpressionUUID->"6173cf32-5b9d-4839-a665-\
ba9f9f12ecb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Three of a kind", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 3.714213074394807*^9}, {3.714217098557069*^9, 
  3.7142170997239885`*^9}, {3.7142333922662215`*^9, 3.7142333994082766`*^9}, {
  3.714233642786319*^9, 3.714233643055726*^9}, {3.714234509490906*^9, 
  3.7142345097401743`*^9}},ExpressionUUID->"c4d3c261-beef-45d0-bfe2-\
35f074c02627"],

Cell[TextData[{
 "We applied the same idea as in our two previous calculations when \
calculating the probability of getting three of a kind. Our new function ",
 StyleBox["threeKindQ", "Input"],
 " filtered out four of a kind and full hand.\n\nThe total amount of hands \
which only contains three of a kind is",
 StyleBox[" 376 320",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 " and the probability of the rank is:\n\[LineSeparator]",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["2240", "22737"], "\[TildeTilde]", " ", 
     RowBox[{"9.852", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "a5c5c163-422a-4ebd-aa41-bf3cd8338212"]
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.714216186472386*^9, 3.714216196551975*^9}, {
   3.71421629918511*^9, 3.7142163438752007`*^9}, {3.714216429493299*^9, 
   3.714216500533051*^9}, {3.714216700140335*^9, 3.714216750135684*^9}, {
   3.7142167816736093`*^9, 3.7142167831074147`*^9}, {3.714216867312608*^9, 
   3.7142169910812263`*^9}, {3.7142170267307625`*^9, 
   3.7142170335308466`*^9}, {3.7142171087755585`*^9, 3.714217127999078*^9}, 
   3.7142171696975994`*^9, {3.7142321027836385`*^9, 3.7142323029120817`*^9}, {
   3.7142323563543835`*^9, 3.714232419908722*^9}, {3.714233185450037*^9, 
   3.714233359194971*^9}, {3.714233764804159*^9, 3.7142338998099413`*^9}, {
   3.7142339766671276`*^9, 3.7142339979878654`*^9}, {3.7142340289507556`*^9, 
   3.714234061941328*^9}, {3.7142341587112894`*^9, 3.7142342177054267`*^9}, {
   3.714234400697851*^9, 3.7142344243755627`*^9}, {3.714234460779422*^9, 
   3.7142346406396856`*^9}, {3.714240684907281*^9, 3.714240706279688*^9}, 
   3.714240942405416*^9, {3.714251245029245*^9, 3.7142512640835085`*^9}, {
   3.7142516004736333`*^9, 
   3.7142517646322575`*^9}},ExpressionUUID->"530afd40-d94b-42dc-b161-\
2b905b2c6eb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Four of a kind", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 3.714213074394807*^9}, {3.714217098557069*^9, 
  3.7142170997239885`*^9}, {3.7142333922662215`*^9, 3.7142333994082766`*^9}, {
  3.714233642786319*^9, 3.714233643055726*^9}, {3.714234509490906*^9, 
  3.7142345097401743`*^9}, {3.7142346559729195`*^9, 3.714234661313445*^9}, {
  3.71423491714255*^9, 3.7142349227776356`*^9}, {3.7142363015182233`*^9, 
  3.714236302965626*^9}},ExpressionUUID->"f16df7d3-199e-49b2-8fb0-\
9decc20ab79f"],

Cell[TextData[{
 "To get the total amount of possible hands which contains four of a kind, we \
need to only filter out five of a kind.\nThe total amount of hands which only \
contains four of a kind is",
 StyleBox[" 23 520",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 ", and the probability of the rank is:\[LineSeparator]\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["140", "22737"], "\[TildeTilde]", " ", 
     RowBox[{"0.616", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "2c0ac18d-cf69-4574-8ea9-7bc9486b4c05"]
}], "Text",
 CellChangeTimes->{{3.714216186472386*^9, 3.714216196551975*^9}, {
   3.71421629918511*^9, 3.7142163438752007`*^9}, {3.714216429493299*^9, 
   3.714216500533051*^9}, {3.714216700140335*^9, 3.714216750135684*^9}, {
   3.7142167816736093`*^9, 3.7142167831074147`*^9}, {3.714216867312608*^9, 
   3.7142169910812263`*^9}, {3.7142170267307625`*^9, 
   3.7142170335308466`*^9}, {3.7142171087755585`*^9, 3.714217127999078*^9}, 
   3.7142171696975994`*^9, {3.7142321027836385`*^9, 3.7142323029120817`*^9}, {
   3.7142323563543835`*^9, 3.714232419908722*^9}, {3.714233185450037*^9, 
   3.714233359194971*^9}, {3.714233764804159*^9, 3.7142338998099413`*^9}, {
   3.7142339766671276`*^9, 3.7142339979878654`*^9}, {3.7142340289507556`*^9, 
   3.714234061941328*^9}, {3.7142341587112894`*^9, 3.7142342177054267`*^9}, {
   3.714234400697851*^9, 3.7142344243755627`*^9}, {3.714234460779422*^9, 
   3.7142346406396856`*^9}, {3.714234847076564*^9, 3.714234870058771*^9}, {
   3.7142349373272595`*^9, 3.714235021315116*^9}, {3.714235258094642*^9, 
   3.7142354032981777`*^9}, {3.7142354401012163`*^9, 3.714235499614832*^9}, {
   3.7142356011979036`*^9, 3.714235601850455*^9}, {3.7142362703243155`*^9, 
   3.7142362729224324`*^9}, 3.7142382872057643`*^9, {3.714240644924863*^9, 
   3.7142406656272883`*^9}, {3.7142512701276183`*^9, 3.714251284109163*^9}, {
   3.71425178195966*^9, 3.7142517893831744`*^9}, {3.7142518223679495`*^9, 
   3.7142520570799093`*^9}},ExpressionUUID->"5854065f-affd-437a-a088-\
831a7681434e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Five of a kind", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 3.714213074394807*^9}, {3.714217098557069*^9, 
  3.7142170997239885`*^9}, {3.7142333922662215`*^9, 3.7142333994082766`*^9}, {
  3.714233642786319*^9, 3.714233643055726*^9}, {3.714234509490906*^9, 
  3.7142345097401743`*^9}, {3.7142346559729195`*^9, 3.714234661313445*^9}, {
  3.71423491714255*^9, 3.7142349227776356`*^9}, {3.7142363015182233`*^9, 
  3.7142363175786886`*^9}},ExpressionUUID->"f5802221-4084-466f-92b0-\
32129539a285"],

Cell[TextData[{
 "Five of a kind contains 5 identical cards which doesn\[CloseCurlyQuote]t \
necessary need to have the same color. the rank is distinct to every other \
rank which makes it easier for us to get an answer because we don\
\[CloseCurlyQuote]t need to exclude any other rank.\n\nThe total amount of \
hands that contains only five of a kind is",
 StyleBox[" 392",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 ", and the probability of getting the rank is:\[LineSeparator]\n ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["7", "68211"], "\[TildeTilde]", " ", 
     RowBox[{"0.01", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "68a00023-c6d9-491d-ba34-fbc15538a77a"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.714216186472386*^9, 3.714216196551975*^9}, {
   3.71421629918511*^9, 3.7142163438752007`*^9}, {3.714216429493299*^9, 
   3.714216500533051*^9}, {3.714216700140335*^9, 3.714216750135684*^9}, {
   3.7142167816736093`*^9, 3.7142167831074147`*^9}, {3.714216867312608*^9, 
   3.7142169910812263`*^9}, {3.7142170267307625`*^9, 
   3.7142170335308466`*^9}, {3.7142171087755585`*^9, 3.714217127999078*^9}, 
   3.7142171696975994`*^9, {3.7142321027836385`*^9, 3.7142323029120817`*^9}, {
   3.7142323563543835`*^9, 3.714232419908722*^9}, {3.714233185450037*^9, 
   3.714233359194971*^9}, {3.714233764804159*^9, 3.7142338998099413`*^9}, {
   3.7142339766671276`*^9, 3.7142339979878654`*^9}, {3.7142340289507556`*^9, 
   3.714234061941328*^9}, {3.7142341587112894`*^9, 3.7142342177054267`*^9}, {
   3.714234400697851*^9, 3.7142344243755627`*^9}, {3.714234460779422*^9, 
   3.7142346406396856`*^9}, {3.714234847076564*^9, 3.714234870058771*^9}, {
   3.7142349373272595`*^9, 3.714235021315116*^9}, {3.714235258094642*^9, 
   3.7142354032981777`*^9}, {3.7142354401012163`*^9, 3.714235499614832*^9}, {
   3.7142356011979036`*^9, 3.714235601850455*^9}, {3.7142362703243155`*^9, 
   3.7142362729224324`*^9}, {3.714236342434734*^9, 3.7142363424357243`*^9}, {
   3.7142376663259277`*^9, 3.714237684575757*^9}, {3.714237776223955*^9, 
   3.7142377957880335`*^9}, 3.7142378493587456`*^9, {3.7142378948133593`*^9, 
   3.714237921336898*^9}, {3.7142379645390577`*^9, 3.7142382059505157`*^9}, {
   3.714238305427064*^9, 3.714238307166793*^9}, {3.7142406133335323`*^9, 
   3.7142406328352194`*^9}, {3.714240962826539*^9, 3.714241019851206*^9}, {
   3.71425128943229*^9, 3.7142512964302874`*^9}, {3.714252088793312*^9, 
   3.7142522671941786`*^9}, {3.7142523473893785`*^9, 
   3.7142524265386667`*^9}},ExpressionUUID->"70b00ae6-dcdd-4857-a372-\
c143b32051fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full hand", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 3.714213074394807*^9}, {3.714217098557069*^9, 
  3.7142170997239885`*^9}, {3.7142333922662215`*^9, 3.7142333994082766`*^9}, {
  3.714233642786319*^9, 3.714233643055726*^9}, {3.714234509490906*^9, 
  3.7142345097401743`*^9}, {3.7142346559729195`*^9, 3.714234661313445*^9}, {
  3.71423491714255*^9, 3.7142349227776356`*^9}, {3.7142363015182233`*^9, 
  3.7142363175786886`*^9}, {3.714238340780653*^9, 
  3.714238343250597*^9}},ExpressionUUID->"aa49615f-2e13-4f88-859e-\
9ea4b50bf90e"],

Cell[TextData[{
 "Full hand is the combination of 3 identical values followed by 2 different \
identical values, without taking colors into account. All ranks higher than ",
 StyleBox["full hand", "Code"],
 " does not overlap the rank and we don\[CloseCurlyQuote]t need to filter \
anything out of our calculation.\n\nBy using the function ",
 StyleBox["fullHand", "Input"],
 ", we get",
 StyleBox[" 65 856",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 " amount of hand that contains the rank , and we get the probability:\n\n ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["392", "22737"], "\[TildeTilde]", " ", 
     RowBox[{"1.724", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "7d3ff98e-586b-43a6-b63f-a36a487496ee"],
 "\n "
}], "Text",
 CellChangeTimes->{{3.714238370972619*^9, 3.7142385635000343`*^9}, {
   3.7142385967185707`*^9, 3.7142386157505255`*^9}, {3.7142390211182613`*^9, 
   3.7142392097727013`*^9}, 3.7142392611094327`*^9, {3.7142394760534725`*^9, 
   3.714239492464254*^9}, 3.7142398720079813`*^9, {3.714240555024885*^9, 
   3.714240601581004*^9}, {3.7142513047038994`*^9, 3.714251327221945*^9}, 
   3.71425141692245*^9, {3.714252457690153*^9, 3.7142524721212387`*^9}, {
   3.714252504794797*^9, 
   3.714252574591618*^9}},ExpressionUUID->"38054122-fa0c-4f7a-a633-\
0ee13a11cb99"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Straight", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 3.714213074394807*^9}, {3.714217098557069*^9, 
  3.7142170997239885`*^9}, {3.7142333922662215`*^9, 3.7142333994082766`*^9}, {
  3.714233642786319*^9, 3.714233643055726*^9}, {3.714234509490906*^9, 
  3.7142345097401743`*^9}, {3.7142346559729195`*^9, 3.714234661313445*^9}, {
  3.71423491714255*^9, 3.7142349227776356`*^9}, {3.7142363015182233`*^9, 
  3.7142363175786886`*^9}, {3.714238340780653*^9, 3.714238343250597*^9}, {
  3.7142398822229214`*^9, 
  3.7142398856787004`*^9}},ExpressionUUID->"59e1487d-6dbb-489c-a3df-\
4259c5bed7eb"],

Cell[TextData[{
 "The rank straight is a bit different from previous ranks. We have to check \
if very hand has an ascending order where the first card is x and the second \
is x+1, the third is x+2, the fourth is x+3 and the last is x+4. By sorting \
every hand we can safely assume the lowest card value is always placed to the \
left of the hand and the highest to the right:\[LineSeparator]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], " ", "\[LessEqual]", " ", 
    SubscriptBox["x", "2"], " ", "\[LessEqual]", " ", 
    SubscriptBox["x", "3"], " ", "\[LessEqual]", " ", 
    SubscriptBox["x", "4"], " ", "\[LessEqual]", " ", 
    SubscriptBox["x", "5"]}], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->16,ExpressionUUID->"0e85454f-a1f4-4e6d-8685-dad440108832"],
 StyleBox[" \n\n",
  FontFamily->"Times New Roman",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"flush", "[", "h", "]"}], "=", 
     RowBox[{
      RowBox[{"h", "-", 
       RowBox[{"h", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "fb4b4c9f-1c51-4abf-a385-4b1b039f2b6c"],
 "\n\nThe function above takes the most left card and substitutes it with \
every card in the hand to check if it\[CloseCurlyQuote]s in ascending order \
from right to left.  "
}], "Text",
 CellChangeTimes->{{3.714238370972619*^9, 3.7142385635000343`*^9}, {
   3.7142385967185707`*^9, 3.7142386157505255`*^9}, {3.7142390211182613`*^9, 
   3.7142392097727013`*^9}, 3.7142392611094327`*^9, {3.7142394760534725`*^9, 
   3.714239492464254*^9}, {3.7142399349923697`*^9, 3.714240478372319*^9}, {
   3.714240530750062*^9, 3.714240541791183*^9}, {3.714241027868143*^9, 
   3.714241155441106*^9}, {3.7142467036898804`*^9, 3.714246710722399*^9}, {
   3.7142467813679914`*^9, 3.71424693345348*^9}, {3.7142526008975787`*^9, 
   3.7142527118655806`*^9}},ExpressionUUID->"f4417c28-828b-4976-ab2b-\
57c56858f489"],

Cell[TextData[{
 "The only thing we have to filter out of from our calculation is the highest \
rank ",
 StyleBox["straight flush", "Code"],
 ". \nWe can substitute the total all hands containing straight flush from \
our total amount of ",
 StyleBox["straight", "Code"],
 " hands because every hand containing straight flush also contains the rank \
straight.\n \nThe answer we got is ",
 StyleBox["98 304",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 " amount of hands that contains straight and the probability of the rank is:\
\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["1360", "53053"], "\[TildeTilde]", " ", 
     RowBox[{"2.563", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "1613e277-01dc-474f-ba53-8fcfd1f27b8b"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.7142412295021286`*^9, 3.71424125153834*^9}, {
  3.7142412845166187`*^9, 3.7142413089558625`*^9}, {3.7142413582137537`*^9, 
  3.714241738928107*^9}, {3.7142462390709085`*^9, 3.714246239213003*^9}, {
  3.714251334319062*^9, 3.714251348903079*^9}, {3.714252785101554*^9, 
  3.7142528142868342`*^9}, {3.714252860800331*^9, 
  3.7142531029075394`*^9}},ExpressionUUID->"0cd7bebd-91d8-49c1-b3e0-\
f02ab4ff5645"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Flush", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 3.714213074394807*^9}, {3.714217098557069*^9, 
  3.7142170997239885`*^9}, {3.7142333922662215`*^9, 3.7142333994082766`*^9}, {
  3.714233642786319*^9, 3.714233643055726*^9}, {3.714234509490906*^9, 
  3.7142345097401743`*^9}, {3.7142346559729195`*^9, 3.714234661313445*^9}, {
  3.71423491714255*^9, 3.7142349227776356`*^9}, {3.7142363015182233`*^9, 
  3.7142363175786886`*^9}, {3.714238340780653*^9, 3.714238343250597*^9}, {
  3.7142398822229214`*^9, 3.7142398856787004`*^9}, {3.714242544837415*^9, 
  3.714242545615824*^9}},ExpressionUUID->"d0093db4-7fc5-4114-b3f8-\
98b4b6cef852"],

Cell[TextData[{
 "The function \[OpenCurlyDoubleQuote]flush\[CloseCurlyDoubleQuote] is \
defined to a point where every card in a deck has to have the same color to \
be included in our total amount. We check if every cards hundred number is \
the same as the rest by dividing with 100. We also excluded every hand which \
contain the highest rank \[OpenCurlyDoubleQuote]straight flush\
\[CloseCurlyDoubleQuote] by substitution. \n\nThe final answer we got is",
 StyleBox[" 8 008",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 " possible hands which contains flush as the highest rank.\nThe probability \
of getting flush is: "
}], "Text",
 CellChangeTimes->{{3.714238370972619*^9, 3.7142385635000343`*^9}, {
   3.7142385967185707`*^9, 3.7142386157505255`*^9}, {3.7142390211182613`*^9, 
   3.7142392097727013`*^9}, 3.7142392611094327`*^9, {3.7142394760534725`*^9, 
   3.714239492464254*^9}, {3.7142399349923697`*^9, 3.714240478372319*^9}, {
   3.714240530750062*^9, 3.714240541791183*^9}, {3.714241027868143*^9, 
   3.714241155441106*^9}, {3.7142425774480658`*^9, 3.7142425781560984`*^9}, {
   3.714242946566315*^9, 3.714243511175254*^9}, {3.7142466742529864`*^9, 
   3.7142466752494755`*^9}, {3.7142513539320717`*^9, 3.7142513606016936`*^9}, 
   3.714251424293822*^9},ExpressionUUID->"21abbf4a-1e91-465f-9ac7-\
4eb56dee69ae"],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["953", "477477"], "\[TildeTilde]", " ", 
     RowBox[{"0.2", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "9b14dbcb-612f-423a-8b2e-df3b59345fde"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.7142412295021286`*^9, 3.71424125153834*^9}, {
   3.7142412845166187`*^9, 3.7142413089558625`*^9}, {3.7142413582137537`*^9, 
   3.714241738928107*^9}, 3.7142425733886943`*^9, {3.7142435238920307`*^9, 
   3.7142435238920307`*^9}, {3.7142435542981033`*^9, 
   3.7142435542981033`*^9}, {3.714246242339452*^9, 3.7142462425068293`*^9}, 
   3.7142523163168783`*^9},ExpressionUUID->"d3d6a35c-47da-48e8-8afe-\
0f96c897143c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Straight flush", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 3.714213074394807*^9}, {3.714217098557069*^9, 
  3.7142170997239885`*^9}, {3.7142333922662215`*^9, 3.7142333994082766`*^9}, {
  3.714233642786319*^9, 3.714233643055726*^9}, {3.714234509490906*^9, 
  3.7142345097401743`*^9}, {3.7142346559729195`*^9, 3.714234661313445*^9}, {
  3.71423491714255*^9, 3.7142349227776356`*^9}, {3.7142363015182233`*^9, 
  3.7142363175786886`*^9}, {3.714238340780653*^9, 3.714238343250597*^9}, {
  3.7142398822229214`*^9, 3.7142398856787004`*^9}, {3.714242544837415*^9, 
  3.714242545615824*^9}, {3.714244075440971*^9, 
  3.7142440899145775`*^9}},ExpressionUUID->"5cf99b27-9dfe-444a-b9a5-\
68c61c066a4f"],

Cell[TextData[{
 "To find every hand that contains straight flush we need to check if every \
all cards in each hand is in ascending order from left to right and we need \
to check if they all have the same color.\nThe function defined below checks \
if every card in the hand follows the ascending order from 0 to 4 by \
substituting every card by the first card, e.g. every card in the hand {108, \
109, 110, 111, 112} gets substituted by 108 {(108 - 108), (109 - 108), (110 - \
108), (111 - 108), (112- 108)}.\nAt the same time we are checking if the \
color is the same by not filtering the hundred number from every card.\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"straightFlush", "[", "h", "]"}], "=", 
     RowBox[{
      RowBox[{"h", "-", 
       RowBox[{"h", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "625fe196-d0ba-4dca-ab2f-58d01adbd3d4"],
 "\n\n\n",
 StyleBox[" 384",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 " is the total amount of straight flush we got from all possible hands and \
the probability of it is:\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["16", "159159"], "\[TildeTilde]", " ", 
     RowBox[{"0.1", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "f4137b95-eb6f-46e9-a751-302e7c76d545"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.714238370972619*^9, 3.7142385635000343`*^9}, {
   3.7142385967185707`*^9, 3.7142386157505255`*^9}, {3.7142390211182613`*^9, 
   3.7142392097727013`*^9}, 3.7142392611094327`*^9, {3.7142394760534725`*^9, 
   3.714239492464254*^9}, {3.7142399349923697`*^9, 3.714240478372319*^9}, {
   3.714240530750062*^9, 3.714240541791183*^9}, {3.714241027868143*^9, 
   3.714241155441106*^9}, {3.7142425774480658`*^9, 3.7142425781560984`*^9}, {
   3.714242946566315*^9, 3.714243511175254*^9}, {3.714244093181347*^9, 
   3.7142440994974804`*^9}, {3.7142441747864995`*^9, 3.7142443378947716`*^9}, 
   3.7142444438264074`*^9, {3.7142446325445538`*^9, 3.7142453105610666`*^9}, 
   3.714245591928048*^9, {3.714246245244392*^9, 3.7142462454400053`*^9}, {
   3.7142513774090843`*^9, 3.714251388983734*^9}, {3.714253132298669*^9, 
   3.714253302728099*^9}},ExpressionUUID->"9748f706-78f8-4a57-aa1e-\
73e982749c13"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nothing ", "Subsection",
 CellChangeTimes->{{3.714054436250665*^9, 3.714054445800165*^9}, {
  3.714213070972419*^9, 3.714213074394807*^9}, {3.714217098557069*^9, 
  3.7142170997239885`*^9}, {3.7142333922662215`*^9, 3.7142333994082766`*^9}, {
  3.714233642786319*^9, 3.714233643055726*^9}, {3.714234509490906*^9, 
  3.7142345097401743`*^9}, {3.7142346559729195`*^9, 3.714234661313445*^9}, {
  3.71423491714255*^9, 3.7142349227776356`*^9}, {3.7142363015182233`*^9, 
  3.7142363175786886`*^9}, {3.714238340780653*^9, 3.714238343250597*^9}, {
  3.7142398822229214`*^9, 3.7142398856787004`*^9}, {3.714242544837415*^9, 
  3.714242545615824*^9}, {3.714244075440971*^9, 3.7142440899145775`*^9}, {
  3.7142455769072065`*^9, 
  3.7142455817816477`*^9}},ExpressionUUID->"491ef180-c6e4-4b71-9597-\
11be725e01f4"],

Cell[TextData[{
 "Calculating the probability nothing is pretty easy, we just have to exclude \
all hands which contains any kind of rank and count all hands with no rank.\n\
We know that one pair filters out two pair, three, four, five of a kind and \
full hand, which is why only need one condition for the\n ranks. We also have \
to exclude flush and straight but not straight flush because it\
\[CloseCurlyQuote]s already filtered out.\n\n",
 StyleBox[" 685 440",
  FontFamily->"Times New Roman",
  FontSlant->"Italic"],
 " is total amount of hands with no rank and the probability of getting \
nothing is:\n\n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     FractionBox["8160", "53053"], "\[TildeTilde]", " ", 
     RowBox[{"15.381", "%"}]}],
    FontFamily->"Times New Roman",
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "f8611df9-ed0b-46e3-a3bb-e681da6ac99e"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.714245624744136*^9, 3.714245951608001*^9}, {
  3.714246079106465*^9, 3.7142461291047926`*^9}, {3.7142462177050085`*^9, 
  3.714246260362605*^9}, {3.714251399215261*^9, 3.714251405202341*^9}, {
  3.714253314768809*^9, 3.7142534148485827`*^9}, {3.714253511205042*^9, 
  3.714253520116156*^9}, {3.714727409541612*^9, 
  3.7147274249316626`*^9}},ExpressionUUID->"a0dc4331-a352-4913-97a7-\
127e7d72386c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",ExpressionUUID->"066c3efd-8d4d-44ad-b557-0d5aba8e72a8"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.714245999017789*^9, 3.714246007850556*^9}, 
   3.7142460524298515`*^9},ExpressionUUID->"962866b0-0fbb-46d5-a6e5-\
2f8b1e1b8f40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "distinct", " ", "values", " ", "ranging", " ", "from", " ",
     "8", " ", "to", " ", "A", " ", "where", " ", "A", " ", "is", " ", "14"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"deck1", " ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"8", ",", "14"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deck", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"deck1", ",", " ", 
       RowBox[{"{", "4", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Add", " ", "4", " ", "colors", " ", "to", " ", "the", " ", "deck"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "deck", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", " ", 
      RowBox[{
       RowBox[{"deck", "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"deck", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
        RowBox[{"i", "*", "100"}]}]}]}], "   ", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "is", " ", "2", " ", "set", " ", "of", " ", "decks", " ", 
     "ranging", " ", "from", " ", "8", " ", "to", " ", "A"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deck", "=", " ", 
     RowBox[{"Sort", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"deck", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"deck", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"deck", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"deck", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"deck", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"deck", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
        RowBox[{"deck", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
        RowBox[{"deck", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Generate", " ", "every", " ", "possible", " ", "hand"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hands", " ", "=", " ", 
     RowBox[{"Subsets", "[", 
      RowBox[{"deck", ",", " ", 
       RowBox[{"{", "5", "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.71413360160268*^9, 3.7141336076443377`*^9}, {
  3.7142119096726522`*^9, 3.7142119221077623`*^9}, {3.71421362091745*^9, 
  3.7142136216116877`*^9}, {3.714214162923381*^9, 3.7142141754881067`*^9}, {
  3.7142148680528283`*^9, 3.714214897660256*^9}, {3.7142150418661814`*^9, 
  3.7142150768585863`*^9}, {3.714215120209831*^9, 3.714215144423318*^9}, {
  3.7142182896602488`*^9, 3.7142182995316095`*^9}, {3.714248479265191*^9, 
  3.7142484901964436`*^9}, {3.714248579533566*^9, 3.714248582420057*^9}, {
  3.7142487821638207`*^9, 3.714248883508365*^9}, {3.7142491361414614`*^9, 
  3.714249136734868*^9}, {3.7145462038620253`*^9, 
  3.7145462067657995`*^9}},ExpressionUUID->"1b129bba-c87f-4ac9-89bf-\
1902f0dab439"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "Straight", " ", "flush"}], "**)"}], "\[IndentingNewLine]", 
  " ", 
  RowBox[{"(*", 
   RowBox[{
   "Checks", " ", "if", " ", "current", " ", "hand", " ", "is", " ", "in", 
    " ", "acsending", " ", "order", " ", "from", " ", "left", " ", "to", " ", 
    "right"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"straightFlush", "[", "h_", "]"}], ":=", 
     RowBox[{
      RowBox[{"h", "-", 
       RowBox[{"h", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Probability", " ", "of", " ", "straight", " ", "flush"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{"amountStraightFlush", "  ", "=", " ", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"hands", ",", " ", 
       RowBox[{"_", "?", " ", 
        RowBox[{"(", "straightFlush", ")"}]}]}], "]"}], " ", "/", " ", 
     RowBox[{"Length", "[", "hands", "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.713949765237788*^9, 3.7139498441189127`*^9}, {
   3.713950458497715*^9, 3.713950465793343*^9}, {3.7139506454558487`*^9, 
   3.713950646492041*^9}, {3.713951095587584*^9, 3.713951095915173*^9}, 
   3.713978841744255*^9, {3.714034207714797*^9, 3.714034260060958*^9}, {
   3.714039262230177*^9, 3.714039323816018*^9}, {3.714117397470406*^9, 
   3.714117418431011*^9}, 3.7142121075471983`*^9, {3.714212213149271*^9, 
   3.714212213565077*^9}, 3.7142123192571983`*^9, 3.7142129036532683`*^9, {
   3.7142463511520844`*^9, 3.7142463517002926`*^9}, {3.714247118173889*^9, 
   3.714247118483015*^9}, {3.714249156275709*^9, 3.714249188732312*^9}, {
   3.7142495906333275`*^9, 3.7142496169710093`*^9}, {3.7142501815758295`*^9, 
   3.714250182156406*^9}, 
   3.7143714751890717`*^9},ExpressionUUID->"ca828e1b-f3fd-49dc-912c-\
ebbeba62212e"],

Cell[BoxData[
 FractionBox["16", "159159"]], "Output",
 CellChangeTimes->{3.714371581555874*^9, 3.714468587336731*^9, 
  3.7145468644335546`*^9},ExpressionUUID->"dfe2e561-4067-45b2-8852-\
0a089f67b49b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "Flush"}], "**)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Checks", " ", "if", " ", "all", " ", "the", " ", "cards", " ", "have", 
    " ", "the", " ", "same", " ", "color"}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"flush", "[", "h_", "]"}], " ", ":=", " ", 
     RowBox[{"Equal", "@@", " ", 
      RowBox[{"Quotient", "[", 
       RowBox[{"h", ",", "100"}], "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{"Probability", " ", "of", " ", "flush"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"countFlush", " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Count", "[", 
          RowBox[{"hands", ",", " ", 
           RowBox[{"_", "?", " ", 
            RowBox[{"(", "flush", ")"}]}]}], "]"}], ")"}], "/", " ", 
        RowBox[{"Length", "[", "hands", "]"}]}], ")"}], " ", "-", 
      "amountStraightFlush"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.714212153769526*^9, 3.7142121601207943`*^9}, {
   3.714212232400077*^9, 3.714212266326997*^9}, 3.7142123216112604`*^9, {
   3.7142463548358717`*^9, 3.714246362909369*^9}, {3.714247121122703*^9, 
   3.714247121417653*^9}, {3.714248331360594*^9, 3.714248415813232*^9}, {
   3.7142487454343452`*^9, 3.7142487596158533`*^9}, {3.7142496016752586`*^9, 
   3.7142496104639845`*^9}, {3.7142501878753242`*^9, 
   3.714250190165558*^9}},ExpressionUUID->"5b2ee447-2a77-4eb8-847c-\
cda7d0e0c6fc"],

Cell[BoxData[
 FractionBox["953", "477477"]], "Output",
 CellChangeTimes->{
  3.714212133040079*^9, 3.7142121974061337`*^9, {3.714212274167414*^9, 
   3.7142122875780945`*^9}, 3.7142123667690787`*^9, 3.714212454152658*^9, 
   3.7142125347164764`*^9, 3.7142129036152368`*^9, 3.714216441249281*^9, 
   3.7142325595506544`*^9, 3.7142464317320337`*^9, 3.7142486525087786`*^9, 
   3.7142491473659267`*^9, 3.7143592102480183`*^9, 3.7143592767560043`*^9, 
   3.7143715923495073`*^9, 3.714468598236322*^9, 
   3.7145468868855696`*^9},ExpressionUUID->"2a757844-fff8-4815-ba07-\
d546cd203478"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "Straight"}], "**)"}], "\[IndentingNewLine]", " ", 
  RowBox[{"(*", 
   RowBox[{
   "Checks", " ", "if", " ", "current", " ", "hand", " ", "is", " ", "in", 
    " ", "acsending", " ", "order", " ", "from", " ", "left", " ", "to", " ", 
    "right"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"straight", "[", "h_", "]"}], " ", ":=", "  ", 
     RowBox[{"MatchQ", "[", 
      RowBox[{
       RowBox[{"h", "-", 
        RowBox[{"h", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"straights", "[", "v_", "]"}], " ", ":=", " ", 
     RowBox[{"straight", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{"Mod", "[", 
        RowBox[{"v", ",", "100"}], "]"}], "]"}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Probability", " ", "of", " ", "straight"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Count", "[", 
        RowBox[{"hands", ",", " ", 
         RowBox[{"_", "?", " ", 
          RowBox[{"(", "straights", ")"}]}]}], "]"}], ")"}], "/", " ", 
      RowBox[{"Length", "[", "hands", "]"}]}], ")"}], " ", "-", 
    "amountStraightFlush", " "}]}]}]], "Input",
 CellChangeTimes->{{3.713949884069519*^9, 3.713949884085308*^9}, {
   3.713950075078986*^9, 3.713950077238902*^9}, 3.7139501089225893`*^9, {
   3.7139503668013906`*^9, 3.713950382464265*^9}, {3.713950427024905*^9, 
   3.713950491308856*^9}, {3.71395060040108*^9, 3.713950601724876*^9}, {
   3.7139507024509153`*^9, 3.7139507076668997`*^9}, {3.713950773852009*^9, 
   3.7139508072995167`*^9}, {3.7139509502716084`*^9, 
   3.7139510003053303`*^9}, {3.713951039392095*^9, 3.713951041367609*^9}, {
   3.7139641894870186`*^9, 3.713964191387873*^9}, {3.7140205877366867`*^9, 
   3.7140205891711683`*^9}, {3.714020799065651*^9, 3.714020919781704*^9}, 
   3.714033689837734*^9, {3.7140337501388407`*^9, 3.714033752679942*^9}, 
   3.714034293811808*^9, {3.714034357756744*^9, 3.714034378853105*^9}, {
   3.714034445694199*^9, 3.7140344488268623`*^9}, 3.7141173222043753`*^9, {
   3.714117352494429*^9, 3.714117376852149*^9}, {3.7141174383026*^9, 
   3.714117467823206*^9}, {3.7142123337342463`*^9, 3.7142123388663673`*^9}, {
   3.7142123959043956`*^9, 3.7142123989971714`*^9}, 3.7142124462855806`*^9, {
   3.7142463718002625`*^9, 3.7142463723557644`*^9}, {3.714247098070283*^9, 
   3.7142471343773537`*^9}, {3.714248424496192*^9, 3.714248430315609*^9}, {
   3.7142486849366937`*^9, 3.714248732447195*^9}, {3.714248766362615*^9, 
   3.7142487667303743`*^9}, {3.7142491956036825`*^9, 
   3.7142491971988077`*^9}, {3.714249623060142*^9, 3.7142496352943916`*^9}, 
   3.7142500868921075`*^9},ExpressionUUID->"9af91b89-895a-42c1-80ff-\
518344310387"],

Cell[BoxData[
 FractionBox["1360", "53053"]], "Output",
 CellChangeTimes->{{3.7142123990361814`*^9, 3.7142124257638006`*^9}, {
   3.7142124801222763`*^9, 3.714212507533126*^9}, 3.7142125561842637`*^9, 
   3.714212924520461*^9, 3.7142164622725697`*^9, 3.714232580264742*^9, 
   3.714246459437133*^9, 3.7142486805510664`*^9, 3.7142491755102963`*^9, 
   3.7143592320520763`*^9, 3.714359296952627*^9, 3.714371613992608*^9, 
   3.7144686240645027`*^9, 
   3.7145469234935064`*^9},ExpressionUUID->"09faa63d-d27a-4233-8ba2-\
74b7fa6e088f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Full", " ", "hand"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Get", " ", "every", " ", "hand", " ", "which", " ", "contains", " ", 
    "full", " ", "hand"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"fullHand", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "x_", ",", "x_", ",", "y_", ",", " ", "y_"}], 
        "}"}], "/;", " ", 
       RowBox[{"x", "\[NotEqual]", "y"}]}], "]"}], ":=", " ", "True"}], ";"}],
    " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fullHand", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "x_", ",", "y_", ",", "y_", ",", " ", "y_"}], 
        "}"}], "/;", " ", 
       RowBox[{"x", "\[NotEqual]", "y"}]}], "]"}], ":=", " ", "True"}], ";"}],
    " ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fullHand", "[", "_", "]"}], ":=", "False"}], " ", ";"}], " ", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{
    "Remove", " ", "color", " ", "from", " ", "every", " ", "card", " ", 
     "and", " ", "sort", " ", "every", " ", "hand"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fullHands", "[", "h_", "]"}], " ", ":=", " ", 
     RowBox[{"fullHand", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{"Mod", "[", 
        RowBox[{"h", ",", "100"}], "]"}], "]"}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{"Probability", " ", "of", " ", "full", " ", "hand"}], "*)"}], " ",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"hands", ",", " ", 
      RowBox[{"_", "?", " ", 
       RowBox[{"(", "fullHands", ")"}]}]}], "]"}], " ", "/", " ", 
    RowBox[{"Length", "[", "hands", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.714020369504346*^9, 3.7140204577270613`*^9}, {
  3.7140207402636766`*^9, 3.7140207488306017`*^9}, {3.7140354681153173`*^9, 
  3.714035479718657*^9}, {3.714246375204529*^9, 3.714246375415923*^9}, {
  3.7142492009574604`*^9, 3.714249214405323*^9}, {3.7142493107408123`*^9, 
  3.7142493544339356`*^9}, {3.71425000734691*^9, 3.714250059966753*^9}, {
  3.714250125400242*^9, 
  3.714250162454627*^9}},ExpressionUUID->"91cf8629-ffd4-4aa1-8a9d-\
7e2c48834c9b"],

Cell[BoxData[
 FractionBox["392", "22737"]], "Output",
 CellChangeTimes->{3.7142129389501133`*^9, 3.714216476766776*^9, 
  3.7142325954154844`*^9, 3.7142464777327404`*^9, 3.714248699359082*^9, 
  3.7142491945514402`*^9, 3.7143592459174137`*^9, 3.714359310563669*^9, 
  3.714371627868395*^9, 3.7144686459289374`*^9, 
  3.7145469465854454`*^9},ExpressionUUID->"3396ff5b-a210-448d-9824-\
8b85f2f3b6f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "Five", " ", "of", " ", "a", " ", "kind"}], "**)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "we", " ", "only", " ", "need", " ", "five", " ", "of", " ", "a", " ", 
    "kind"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"fiveKind", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "x_", ",", "x_", ",", "x_", ",", " ", "x_"}], "}"}],
       "]"}], ":=", " ", "True"}], ";"}], " ", "\[IndentingNewLine]", " ", 
   RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fiveKind", "[", "_", "]"}], ":=", "False"}], " ", ";"}], 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Remove", " ", "color", " ", "from", " ", "every", " ", "card", " ", 
     "and", " ", "sort", " ", "all", " ", "hands"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fiveKinds", "[", "h_", "]"}], " ", ":=", " ", 
     RowBox[{"fiveKind", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{"Mod", "[", 
        RowBox[{"h", ",", "100"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "five", " ", "of", " ", "a", " ", "kind"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"hands", ",", " ", 
      RowBox[{"_", "?", " ", 
       RowBox[{"(", "fiveKinds", ")"}]}]}], "]"}], " ", "/", " ", 
    RowBox[{"Length", "[", "hands", "]"}], " "}]}]}]], "Input",
 CellChangeTimes->{{3.7140202456552167`*^9, 3.714020312112466*^9}, 
   3.714020352358453*^9, {3.7140207313613625`*^9, 3.71402073184674*^9}, {
   3.7142463789021807`*^9, 3.714246379090119*^9}, 3.714248318502393*^9, {
   3.7142492727099943`*^9, 3.7142492799455967`*^9}, {3.7142493702981696`*^9, 
   3.7142493767757654`*^9}, {3.7142499381203175`*^9, 
   3.7142499985205297`*^9}, {3.7142500752586174`*^9, 3.7142500802597475`*^9}, 
   3.7144703966782045`*^9},ExpressionUUID->"33e91664-b242-4077-b733-\
c812bcce4393"],

Cell[BoxData[
 FractionBox["7", "68211"]], "Output",
 CellChangeTimes->{3.714212951626693*^9, 3.714216489444476*^9, 
  3.714232622679449*^9, 3.7142464948558836`*^9, 3.7142487162071633`*^9, 
  3.7142492116418624`*^9, 3.7143592583372736`*^9, 3.7143593227044744`*^9, 
  3.714371640164682*^9, 3.7144686659498224`*^9, 
  3.714546967054002*^9},ExpressionUUID->"18fc8dad-bdf1-421f-af05-\
7415ef4735ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "Four", " ", "of", " ", "a", " ", "kind"}], "**)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Filter", " ", "out", " ", "five", " ", "of", " ", "a", " ", "kind"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"fourKind", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "x_", ",", "x_", ",", "x_", ",", " ", "x_"}], "}"}],
       "]"}], ":=", " ", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "We", " ", "only", " ", "need", " ", "four", " ", "of", " ", "a", " ", 
     "kind"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fourKind", "[", 
      RowBox[{"{", 
       RowBox[{
       "___", ",", "x_", ",", "x_", ",", "x_", ",", "x_", ",", "___"}], "}"}],
       "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "else", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fourKind", "[", "_", "]"}], ":=", "False"}], " ", ";"}], " ", 
   "\[IndentingNewLine]", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Remove", " ", "color", " ", "from", " ", "every", " ", "card", " ", 
     "and", " ", "sort", " ", "all", " ", "hands"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fourKinds", "[", "h_", "]"}], " ", ":=", " ", 
     RowBox[{"fourKind", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{"Mod", "[", 
        RowBox[{"h", ",", "100"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "four", " ", "of", " ", "a", " ", "kind"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"hands", ",", " ", 
      RowBox[{"_", "?", " ", 
       RowBox[{"(", "fourKinds", ")"}]}]}], "]"}], " ", "/", " ", 
    RowBox[{"Length", "[", "hands", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.713949552099854*^9, 3.713949559236474*^9}, {
   3.71395025746297*^9, 3.713950295589213*^9}, {3.713950326322789*^9, 
   3.713950328078355*^9}, 3.71395036180309*^9, {3.7139514140854816`*^9, 
   3.713951602146159*^9}, {3.7139516401577806`*^9, 3.713951656475754*^9}, {
   3.713951825688445*^9, 3.7139518350371447`*^9}, {3.713951895990152*^9, 
   3.713951989858521*^9}, {3.713952135100648*^9, 3.713952138284012*^9}, {
   3.713952269721263*^9, 3.713952278764723*^9}, {3.7139523533094788`*^9, 
   3.713952359500291*^9}, {3.7139559240499783`*^9, 3.713955939957261*^9}, {
   3.713963212672022*^9, 3.7139632304418416`*^9}, {3.7139632840669193`*^9, 
   3.713963296634865*^9}, {3.713963335172887*^9, 3.7139634112336855`*^9}, 
   3.7139635063629823`*^9, {3.7139635734015813`*^9, 3.713963578707949*^9}, {
   3.7139643776118684`*^9, 3.7139644111096525`*^9}, {3.7139644997793207`*^9, 
   3.713964500244857*^9}, {3.7139646020388603`*^9, 3.71396461034886*^9}, {
   3.713964641848032*^9, 3.713964642179782*^9}, {3.7139647087726088`*^9, 
   3.71396472404156*^9}, {3.713964953581599*^9, 3.713964968411972*^9}, {
   3.713965090174221*^9, 3.7139651061985817`*^9}, {3.713965516705722*^9, 
   3.713965523208637*^9}, {3.713965702190632*^9, 3.7139657436069374`*^9}, {
   3.713966031170441*^9, 3.7139660547930346`*^9}, {3.713968055282414*^9, 
   3.7139680638765755`*^9}, 3.713968095530011*^9, {3.7139681282027283`*^9, 
   3.713968130591711*^9}, {3.713968221762438*^9, 3.713968257640956*^9}, {
   3.7139682932585535`*^9, 3.713968317504861*^9}, {3.713968698042674*^9, 
   3.7139687065374475`*^9}, {3.713968770588602*^9, 3.71396881405846*^9}, {
   3.7139716899023705`*^9, 3.713971696064414*^9}, {3.713972048936659*^9, 
   3.713972050377247*^9}, {3.713972159550932*^9, 3.7139721609735537`*^9}, {
   3.713973297940449*^9, 3.7139733044080296`*^9}, {3.7139733765982904`*^9, 
   3.713973423328782*^9}, {3.713973502213443*^9, 3.713973536035467*^9}, 
   3.7139736883515425`*^9, {3.7140197390136137`*^9, 3.7140197565216103`*^9}, {
   3.714246381850649*^9, 3.7142463820410438`*^9}, {3.714247496610544*^9, 
   3.7142475051902604`*^9}, {3.714248255193281*^9, 3.714248306377956*^9}, {
   3.71424938252045*^9, 3.714249385552104*^9}, {3.7142498811279526`*^9, 
   3.7142499297740097`*^9}, {3.714249974214923*^9, 
   3.714249974911971*^9}},ExpressionUUID->"31642f31-9924-448a-8e18-\
9a3fad2d3a95"],

Cell[BoxData[
 FractionBox["140", "22737"]], "Output",
 CellChangeTimes->{3.7142129686376047`*^9, 3.7142165067822742`*^9, 
  3.7142326523347664`*^9, 3.7142465178566875`*^9, 3.7142487388927507`*^9, 
  3.714249234269888*^9, 3.71435926075756*^9, 3.7143593394593735`*^9, 
  3.7143716570666065`*^9, 3.7144686826438236`*^9, 
  3.714546996243699*^9},ExpressionUUID->"19424517-fc41-41b2-8277-\
a91f700b4569"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "Three", " ", "of", " ", "a", " ", "kind"}], "**)"}], 
  "\[IndentingNewLine]", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Filter", " ", "out", " ", "four", " ", "of", " ", "a", " ", "kind"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"threeKindQ", "[", 
      RowBox[{"{", 
       RowBox[{
       "___", ",", "x_", ",", "x_", ",", "x_", ",", "x_", ",", "___"}], "}"}],
       "]"}], ":=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Filter", " ", "out", " ", "full", " ", "hand"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"threeKindQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "x_", ",", "x_", ",", "y_", ",", "y_"}], "}"}], "/;",
        " ", 
       RowBox[{"x", " ", "\[NotEqual]", " ", "y"}]}], "]"}], " ", ":=", " ", 
     "False"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Filter", " ", "out", " ", "full", " ", "hand"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"threeKindQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "x_", ",", "y_", ",", "y_", ",", "y_"}], "}"}], "/;",
        " ", 
       RowBox[{"x", " ", "\[NotEqual]", " ", "y"}]}], "]"}], " ", ":=", " ", 
     "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "We", " ", "only", " ", "need", " ", "three", " ", "of", " ", "a", " ", 
     "kind"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"threeKindQ", "[", 
      RowBox[{"{", 
       RowBox[{"___", ",", "x_", ",", "x_", ",", "x_", ",", "___"}], "}"}], 
      "]"}], ":=", "True"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"threeKindQ", "[", 
      RowBox[{"{", "___", "}"}], "]"}], ":=", "False"}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Remove", " ", "color", " ", "and", " ", "sort", " ", "all", " ", 
     "hands"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"threeKindQs", "[", "h_", "]"}], " ", ":=", " ", 
     RowBox[{"threeKindQ", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{"Mod", "[", 
        RowBox[{"h", ",", "100"}], "]"}], "]"}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "three", " ", "of", " ", "a", " ", 
     "kind"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Count", "[", 
      RowBox[{"hands", ",", " ", 
       RowBox[{"_", "?", " ", 
        RowBox[{"(", "threeKindQs", ")"}]}]}], "]"}], ")"}], "/", " ", 
    RowBox[{"Length", "[", "hands", "]"}], " "}]}]}]], "Input",
 CellChangeTimes->{{3.7140201922911234`*^9, 3.714020212017247*^9}, {
   3.714020552032795*^9, 3.7140205624140954`*^9}, {3.7140210825975404`*^9, 
   3.714021083059893*^9}, {3.7140355428167477`*^9, 3.7140355474049273`*^9}, {
   3.714212055205905*^9, 3.7142120565461335`*^9}, 3.7142121047699156`*^9, 
   3.7142121886399517`*^9, {3.714212806960778*^9, 3.7142128071382213`*^9}, {
   3.7142463840956717`*^9, 3.7142463842883606`*^9}, {3.7142471444790215`*^9, 
   3.714247202507056*^9}, {3.7142472570733857`*^9, 3.714247264814452*^9}, {
   3.7142474653272824`*^9, 3.7142474809352245`*^9}, {3.71424821378931*^9, 
   3.714248223505565*^9}, {3.714249389295746*^9, 3.714249393259528*^9}, {
   3.714249828064305*^9, 
   3.7142499001785374`*^9}},ExpressionUUID->"81ac2ed5-d27b-4435-8a58-\
5bd556220973"],

Cell[BoxData[
 FractionBox["2240", "22737"]], "Output",
 CellChangeTimes->{3.7142120997814684`*^9, 3.7142121575836477`*^9, 
  3.7142122219227552`*^9, 3.7142124242007165`*^9, 3.714212479213687*^9, 
  3.714212581378474*^9, 3.714212993833069*^9, 3.7142165317568655`*^9, 
  3.714232693808673*^9, 3.714246551017129*^9, 3.714248771078517*^9, 
  3.7142492663625684`*^9, 3.714359394493781*^9, 3.714371681963869*^9, 
  3.7144687070519114`*^9, 
  3.714547037983105*^9},ExpressionUUID->"d486fc19-8faa-49b3-9adb-\
45dca44602e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "Two", " ", "pairs"}], "**)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Filter", " ", "out", " ", "three", " ", "of", " ", "a", " ", "kind"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"twoPairQ", "[", 
      RowBox[{"{", 
       RowBox[{"___", ",", "x_", ",", "x_", ",", "x_", ",", " ", "___"}], 
       "}"}], "]"}], ":=", "False"}], ";"}], " ", "\[IndentingNewLine]", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"We", " ", "only", " ", "need", " ", "two", " ", "pairs"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"twoPairQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "___", ",", "x_", ",", "x_", ",", "___", ",", "y_", ",", "y_", ",", 
         "___"}], "}"}], "/;", 
       RowBox[{"x", "\[NotEqual]", "y"}]}], "]"}], ":=", "True"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"twoPairQ", "[", 
      RowBox[{"{", "___", "}"}], "]"}], ":=", "False"}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Remove", " ", "color"}], ",", " ", 
     RowBox[{
     "sort", " ", "all", " ", "hands", " ", "and", " ", "exclude", " ", 
      "flush"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"twoPairQs", "[", "h_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"twoPairQ", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"h", ",", "100"}], "]"}], "]"}], "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"flush", "[", "h", "]"}]}], ")"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"(*", 
    RowBox[{"Probability", " ", "of", " ", "of", " ", "two", " ", "pairs"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Count", "[", 
      RowBox[{"hands", ",", " ", 
       RowBox[{"_", "?", " ", 
        RowBox[{"(", "twoPairQs", ")"}]}]}], "]"}], ")"}], "/", " ", 
    RowBox[{"Length", "[", "hands", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.71404078319739*^9, 3.714040805711691*^9}, {
   3.7142172249387317`*^9, 3.714217237413911*^9}, {3.714246386905122*^9, 
   3.7142463871092205`*^9}, {3.7142472173488946`*^9, 
   3.7142472344538794`*^9}, {3.7142472679427395`*^9, 
   3.7142472811602445`*^9}, {3.7142474294864855`*^9, 
   3.7142474628043523`*^9}, {3.714249397395974*^9, 3.7142494035388355`*^9}, {
   3.7142497869123287`*^9, 3.7142498225405874`*^9}, 3.7144684945840917`*^9, {
   3.7144685647315116`*^9, 
   3.7144685694734297`*^9}},ExpressionUUID->"7066f2cb-7320-4823-97f6-\
22fced22954d"],

Cell[BoxData[
 FractionBox["1305", "7579"]], "Output",
 CellChangeTimes->{3.7142130185375457`*^9, 3.714216556649973*^9, 
  3.7142327433403673`*^9, 3.7142465843181567`*^9, 3.714248804281475*^9, 
  3.7142493006201563`*^9, 3.714359426095132*^9, 3.714371706536535*^9, 
  3.7144687334143405`*^9, 
  3.7145470807595525`*^9},ExpressionUUID->"55e8ec33-971c-4e45-86e2-\
3eef797fd0f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "One", " ", "pair"}], "**)"}], "\[IndentingNewLine]", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Filter", " ", "out", " ", "two", " ", "pairs"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"pairQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "___", ",", "x_", ",", "x_", ",", "___", ",", "y_", ",", "y_", ",", 
         "___"}], "}"}], "/;", 
       RowBox[{"x", "\[NotEqual]", "y"}]}], "]"}], ":=", "False"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Exclude", " ", "three", " ", "of", " ", "a", " ", "kind"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pairQ", "[", 
      RowBox[{"{", 
       RowBox[{"___", ",", "x_", ",", "x_", ",", "x_", ",", " ", "___"}], 
       "}"}], "]"}], ":=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Only", " ", "need", " ", "a", " ", "pair"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pairQ", "[", 
      RowBox[{"{", 
       RowBox[{"___", ",", "x_", ",", "x_", ",", "___"}], "}"}], "]"}], ":=", 
     "True"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "else", " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pairQ", "[", 
      RowBox[{"{", "___", "}"}], "]"}], ":=", "False"}], " ", ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Exclude", " ", "all", " ", "colors", " ", "from", " ", "each", " ", 
     "card", " ", "and", " ", "sort", " ", "all", " ", 
     RowBox[{"hands", ".", " ", "Also"}], " ", "exclude", " ", "flush"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pairQs", "[", "h_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"pairQ", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"Mod", "[", 
         RowBox[{"h", ",", "100"}], "]"}], "]"}], "]"}], " ", "&&", 
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{"flush", "[", "h", "]"}]}], ")"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Probability", " ", "of", " ", "one", " ", "pair"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Count", "[", 
      RowBox[{"hands", ",", " ", 
       RowBox[{"_", "?", " ", 
        RowBox[{"(", "pairQs", ")"}]}]}], "]"}], ")"}], "/", " ", 
    RowBox[{"Length", "[", "hands", "]"}], " "}]}]}]], "Input",
 CellChangeTimes->{{3.714040751088518*^9, 3.7140407639624853`*^9}, {
   3.714116075960738*^9, 3.714116157910733*^9}, 3.714116199497342*^9, {
   3.714186340652658*^9, 3.7141863513756437`*^9}, {3.7142127686028423`*^9, 
   3.7142127799041986`*^9}, {3.7142164046247606`*^9, 3.7142164077503943`*^9}, 
   3.7142172431445494`*^9, {3.714246390579248*^9, 3.7142463907724705`*^9}, {
   3.714247290957801*^9, 3.7142474176716843`*^9}, {3.7142494067135887`*^9, 
   3.7142494140301027`*^9}, {3.714249737932849*^9, 
   3.714249779901413*^9}},ExpressionUUID->"26e7ebed-3b0e-47d3-a64d-\
cf308fa6a118"],

Cell[BoxData[
 FractionBox["11920", "22737"]], "Output",
 CellChangeTimes->{3.7142164079866123`*^9, 3.7142165915404177`*^9, 
  3.7142328035074263`*^9, 3.714246630312953*^9, 3.714248850212962*^9, 
  3.7142493473454046`*^9, 3.7143594818571815`*^9, 3.7143717405183706`*^9, 
  3.7144687670377073`*^9, 
  3.7145471389381065`*^9},ExpressionUUID->"42b684ed-5d66-451f-8a63-\
a21cdc48699a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", "Nothing"}], "**)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Exclude", " ", "one", " ", "pair"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"nothing", "[", 
      RowBox[{"{", 
       RowBox[{"___", ",", "x_", ",", "x_", ",", "___"}], "}"}], "]"}], ":=", 
     "False"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nothing", "[", 
      RowBox[{"{", "___", "}"}], "]"}], ":=", "True"}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Remove", " ", "color", " ", "and", " ", "exclude", " ", "flush", " ", 
     "and", " ", "straight"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nothings", "[", "h_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"nothing", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{"Mod", "[", 
        RowBox[{"h", ",", "100"}], "]"}], "]"}], "]"}], "&&", 
     RowBox[{"(", 
      RowBox[{"!", 
       RowBox[{"flush", "[", "h", "]"}]}], ")"}], "&&", 
     RowBox[{"(", 
      RowBox[{"!", 
       RowBox[{"straights", "[", "h", "]"}]}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Count", "[", 
      RowBox[{"hands", ",", " ", 
       RowBox[{"_", "?", " ", 
        RowBox[{"(", "nothings", ")"}]}]}], "]"}], ")"}], "/", " ", 
    RowBox[{"Length", "[", "hands", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.714134357152502*^9, 3.714134378304392*^9}, {
   3.714134505506342*^9, 3.7141346167985153`*^9}, 3.714134651395916*^9, {
   3.714134705105299*^9, 3.7141347431003323`*^9}, {3.714134831774335*^9, 
   3.714134891819249*^9}, {3.714135020460387*^9, 3.714135048560006*^9}, {
   3.714205259992818*^9, 3.7142052622241106`*^9}, {3.714205296132701*^9, 
   3.714205307595765*^9}, {3.7142053910040503`*^9, 3.7142053969176645`*^9}, {
   3.714211200993746*^9, 3.7142112015162487`*^9}, 3.714246337934557*^9, {
   3.7142463934674683`*^9, 3.714246399874521*^9}, {3.7142496531935883`*^9, 
   3.7142497304423423`*^9}, 
   3.714550054238041*^9},ExpressionUUID->"7d33b503-b30d-4dfc-b832-\
a54c62105ce1"],

Cell[BoxData[
 FractionBox["1360", "7579"]], "Output",
 CellChangeTimes->{3.714246660669623*^9, 3.7142488811262875`*^9, 
  3.7142493780296507`*^9, 3.714359504190817*^9, 3.7143717634470463`*^9, 
  3.714468792773028*^9, 
  3.7145471771845264`*^9},ExpressionUUID->"a5ba6d01-3f90-43fd-aeb8-\
af8167198075"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 1b: Poker Probability by combinatorial calculus", "Subchapter",
 CellChangeTimes->{{3.714053895716298*^9, 3.7140539022668533`*^9}, {
  3.7140539346811123`*^9, 
  3.7140539623303328`*^9}},ExpressionUUID->"3943a846-eea4-4876-95a3-\
e517dcb28f22"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.714282720375083*^9, 
  3.71428272049527*^9}},ExpressionUUID->"e6a616d4-9e7d-476e-afdb-\
eddb5992ee51"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"30dd1399-d4ec-49a0-8fd5-70a0b5dbf7c9"],

Cell["\<\
The second task is to use combinatorial calculus to calculate the probability \
of flush, straight, full house, 3 of a kind and 4 of a kind. Every rank has \
to be compared to task 1a to check if the answers match. \
\>", "Text",
 CellChangeTimes->{{3.7140578713867702`*^9, 3.7140579318895435`*^9}, {
  3.714058196660232*^9, 3.7140582593175898`*^9}, {3.714058794216051*^9, 
  3.714058859365697*^9}},ExpressionUUID->"4b9863a3-9714-4d46-af7e-\
1010ac8a6d7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsection",ExpressionUUID->"394dfc0c-0a0a-4238-9a08-e687e1d6a870"],

Cell["\<\
The results is calculated by using combinatorial calculus which is also \
confirmed with the answer from task 1a.\
\>", "Text",
 CellChangeTimes->{{3.7142198814478207`*^9, 3.714219932667262*^9}, {
  3.714233390120586*^9, 
  3.714233441740211*^9}},ExpressionUUID->"b8b7b611-babf-4e64-b546-\
5b4091945469"],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", GridBox[{
     {"Hand", "Probability", 
      RowBox[{"Probability", ",", "%"}]},
     {"Flush", 
      FractionBox["953", "477477"], "0.1995907656"},
     {"Straight", 
      FractionBox["1360", "53053"], "2.563474262"},
     {
      RowBox[{"Full", " ", "house"}], 
      FractionBox["392", "22737"], "1.724062101"},
     {
      RowBox[{"3", " ", "of", " ", "a", " ", "kind"}], 
      FractionBox["2240", "22737"], "9.851783437"},
     {
      RowBox[{"4", " ", "of", " ", "a", " ", "kind"}], 
      FractionBox["140", "22737"], "0.6157364648"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}]}], 
  TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.714135122428233*^9, 3.7141351510148706`*^9}, {
   3.7141351901105328`*^9, 3.71413521820566*^9}, {3.714135250203578*^9, 
   3.714135264833612*^9}, {3.714219231620756*^9, 3.714219248702737*^9}, {
   3.714219281967062*^9, 3.714219322667849*^9}, {3.7142193594085712`*^9, 
   3.714219532099897*^9}, {3.7142195878889647`*^9, 3.714219629983087*^9}, {
   3.7142197120112953`*^9, 3.7142198669271517`*^9}, {3.714219940857649*^9, 
   3.714219942872773*^9}, 
   3.7142465203889704`*^9},ExpressionUUID->"1297dab3-2c38-475a-92ba-\
1ebf17cb4d49"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Using combinatorial calculus method to estimate the probability in Poker\
\>", "Section",
 CellChangeTimes->{{3.714219956276041*^9, 3.714220049015778*^9}, {
  3.7142332698823767`*^9, 
  3.714233272663557*^9}},ExpressionUUID->"c2b2532e-7205-4e61-be8b-\
ba541fb9b59e"],

Cell[CellGroupData[{

Cell["Flush", "Subsection",
 CellChangeTimes->{{3.714218310594441*^9, 3.714218313636799*^9}, {
  3.714220058411882*^9, 3.714220090386464*^9}, {3.714232505626527*^9, 
  3.714232520560522*^9}, {3.714232655407269*^9, 3.714232664091816*^9}, {
  3.714232937413684*^9, 
  3.7142329383514547`*^9}},ExpressionUUID->"ae1f4b0a-f1a2-41f3-b21e-\
71b67866bce1"],

Cell[TextData[{
 "First we choose 5 cards from 14 cards with same color, there are 7 cards \
with same color in one deck ranging from 8 to A, with 2 decks we got 14 cards \
with same color. We have to choose 1 of 4 different colors. Finally we have \
to excluding the straight flush, where it has 3 possible straight from 8 \
cards ranging from 8 to A. The multiplication principle gives the result.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"different", " ", "color"}]], "=", 
     TemplateBox[{"4","1"},
      "Binomial"]}], ",", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"5", "cards"}]], "=", 
     TemplateBox[{"14","5"},
      "Binomial"]}], ",", " ", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"straight", " ", "each", " ", "color"}]], "=", 
     TemplateBox[{"3","1"},
      "Binomial"]}]}], TraditionalForm]],ExpressionUUID->
  "1acaaea1-5b26-498c-a0ef-0dc0d8acad25"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"1", " ", "card"}]], "=", 
     TemplateBox[{"8","1"},
      "Binomial"]}]}], TraditionalForm]],ExpressionUUID->
  "6c976dda-d093-4070-8c98-8247f0ffbe55"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", 
     RowBox[{"flush", "(", 
      RowBox[{
       RowBox[{"incl", ".", " ", "straight"}], " ", "flush"}], ")"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", 
       RowBox[{"different", " ", "color"}]], 
      SubscriptBox["n", 
       RowBox[{"5", "cards"}]]}], "=", 
     RowBox[{
      TemplateBox[{"4","1"},
       "Binomial"], " ", 
      TemplateBox[{"14","5"},
       "Binomial"]}]}]}], TraditionalForm]],ExpressionUUID->
  "5a7ef431-a4e1-4a6f-b7fa-52cb1578dfbf"],
 "\nBecause there are 2 set of 4 different color which give a combination of \
square of 4 which is 16.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", 
     RowBox[{"straight", " ", "flush"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", 
       RowBox[{"straight", " ", "each", " ", "color"}]], 
      SubscriptBox["n", 
       RowBox[{"1", "card"}]]}], "=", 
     RowBox[{"16", 
      TemplateBox[{"3","1"},
       "Binomial"], " ", 
      TemplateBox[{"8","1"},
       "Binomial"]}]}]}], TraditionalForm]],ExpressionUUID->
  "260281df-0216-4aff-95e0-c6e1fd055356"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Therefore]", 
     SubscriptBox["P", "flush"]}], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["n", 
        RowBox[{"flush", " ", "-"}]], 
       SubscriptBox["n", 
        RowBox[{"straight", " ", "flush", " "}]]}], 
      SubscriptBox["n", "tot"]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         TemplateBox[{"4","1"},
          "Binomial"], " ", 
         TemplateBox[{"14","5"},
          "Binomial"]}], "-", 
        RowBox[{"16", 
         TemplateBox[{"3","1"},
          "Binomial"], " ", 
         TemplateBox[{"8","1"},
          "Binomial"]}]}], 
       TemplateBox[{"56","5"},
        "Binomial"]], "=", 
      RowBox[{
       FractionBox["953", "477477"], "\[TildeTilde]", 
       RowBox[{"0.1995907656", "%"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"7ed376b7-e9ba-4e6f-ac1e-f4aa5a07fbb4"]
}], "Text",
 CellChangeTimes->{{3.714218318579761*^9, 3.714218326967608*^9}, {
   3.714220353633232*^9, 3.71422044639818*^9}, {3.714220476416687*^9, 
   3.714220686008274*^9}, {3.714220716347723*^9, 3.714220770036224*^9}, {
   3.71422080991078*^9, 3.714220835552268*^9}, {3.714220878262947*^9, 
   3.714222035040148*^9}, 3.714222073087813*^9, {3.7142221167772427`*^9, 
   3.714222343020986*^9}, {3.714222399946569*^9, 3.714222662373934*^9}, {
   3.714231391582747*^9, 3.71423146800832*^9}, {3.7142315534559507`*^9, 
   3.714231567120504*^9}, {3.71423163639709*^9, 3.7142316371502123`*^9}, {
   3.714231671382752*^9, 3.714231742537078*^9}, 3.7142317809861727`*^9, {
   3.714231862189145*^9, 3.714231868774063*^9}, {3.714231937675161*^9, 
   3.714232141036909*^9}, {3.7142321803339853`*^9, 3.714232213515018*^9}, {
   3.714232266914028*^9, 3.714232393167102*^9}, {3.714232432185128*^9, 
   3.714232479708544*^9}, {3.7142328899255037`*^9, 3.714232903372246*^9}, {
   3.714233153858313*^9, 3.7142332001963377`*^9}, {3.7142334606281013`*^9, 
   3.714233505390781*^9}, {3.714233562655348*^9, 
   3.7142337384355793`*^9}},ExpressionUUID->"ff13703d-203d-4967-a5ec-\
dcecc91f0ea3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Straight", "Subsection",
 CellChangeTimes->{{3.714218310594441*^9, 3.714218313636799*^9}, {
  3.714220058411882*^9, 3.714220090386464*^9}, {3.714232505626527*^9, 
  3.714232520560522*^9}, {3.714232655407269*^9, 3.714232664091816*^9}, {
  3.714232964079338*^9, 
  3.714232965882615*^9}},ExpressionUUID->"21f71e93-af09-4404-a22e-\
a268bb8095cf"],

Cell[TextData[{
 "There are 3 different ways to create straight for each deck of same color \
ranging from 8 to A. From the two sets of deck we can choose 1 of 8 cards, \
and we have to choose that 5 times. Due to the multiplication principle, it \
gives us 8 choose 1 elevated with 5. In the end we need to excluding the \
straight flush which is included in straight.\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"straight", " ", "each", " ", "color"}]], "=", 
     TemplateBox[{"3","1"},
      "Binomial"]}]}], TraditionalForm]],ExpressionUUID->
  "6a8989a5-00b9-4db4-a879-d99dd9feaf9d"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", 
     RowBox[{"one", " ", "card", " ", "of", " ", "each", " ", "value"}]], "=", 
    TemplateBox[{"8","1"},
     "Binomial"]}], TraditionalForm]],ExpressionUUID->
  "5b776dbb-69d2-406e-b1f7-17be515b80cf"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["n", "straight"], "=", 
     SubscriptBox["n", 
      RowBox[{"straight", " ", "each", " ", "color"}]]}], ",", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"one", " ", "card", " ", "of", " ", "each", " ", 
       RowBox[{"value", " ", "^", "5"}]}]], "=", 
     RowBox[{
      TemplateBox[{"3","1"},
       "Binomial"], " ", 
      RowBox[{
       TemplateBox[{"8","1"},
        "Binomial"], "^", "5"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "87b7a704-1d24-4e7d-8a00-2017b9dbd82a"],
 "\nJust as mentioned before the straight flush need to be subtracted.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", 
     RowBox[{"straight", " ", "flush"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", 
       RowBox[{"straight", " ", "each", " ", "color"}]], 
      SubscriptBox["n", 
       RowBox[{"1", "card"}]]}], "=", 
     RowBox[{"16", 
      TemplateBox[{"3","1"},
       "Binomial"], " ", 
      TemplateBox[{"8","1"},
       "Binomial"]}]}]}], TraditionalForm]],ExpressionUUID->
  "278f5cfa-505f-4d00-af7f-08e2ec33764a"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Therefore]", 
     SubscriptBox["P", "straight"]}], "=", 
    RowBox[{
     FractionBox[
      SubscriptBox["n", "straight"], 
      SubscriptBox["n", "tot"]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         TemplateBox[{"3","1"},
          "Binomial"], " ", 
         RowBox[{
          TemplateBox[{"8","1"},
           "Binomial"], "^", "5"}]}], " ", "-", 
        RowBox[{"16", " ", 
         TemplateBox[{"3","1"},
          "Binomial"], 
         TemplateBox[{"8","1"},
          "Binomial"]}]}], 
       TemplateBox[{"56","5"},
        "Binomial"]], "=", 
      RowBox[{
       FractionBox["1360", "53053"], "\[TildeTilde]", 
       RowBox[{"2.56347426", "%"}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "4944d42e-63b7-47b5-af37-e7643196c515"]
}], "Text",
 CellChangeTimes->{{3.714218318579761*^9, 3.714218326967608*^9}, {
   3.714220353633232*^9, 3.71422044639818*^9}, {3.714220476416687*^9, 
   3.714220686008274*^9}, {3.714220716347723*^9, 3.714220770036224*^9}, {
   3.71422080991078*^9, 3.714220835552268*^9}, {3.714220878262947*^9, 
   3.714222035040148*^9}, 3.714222073087813*^9, {3.7142221167772427`*^9, 
   3.714222343020986*^9}, {3.714222399946569*^9, 3.714222662373934*^9}, {
   3.714231391582747*^9, 3.71423146800832*^9}, {3.7142315534559507`*^9, 
   3.714231567120504*^9}, {3.71423163639709*^9, 3.7142316371502123`*^9}, {
   3.714231671382752*^9, 3.714231742537078*^9}, 3.7142317809861727`*^9, {
   3.714231862189145*^9, 3.714231868774063*^9}, {3.714231937675161*^9, 
   3.714232141036909*^9}, {3.7142321803339853`*^9, 3.714232213515018*^9}, {
   3.714232266914028*^9, 3.714232393167102*^9}, {3.714232432185128*^9, 
   3.714232479708544*^9}, {3.7142328899255037`*^9, 3.714232931317552*^9}, {
   3.714233190085813*^9, 3.714233195463032*^9}, {3.714233864684999*^9, 
   3.714233867586033*^9}, {3.714233924357955*^9, 3.714233984156323*^9}, {
   3.714234073095969*^9, 3.7142341406923447`*^9}, {3.7142342176065493`*^9, 
   3.714234220778831*^9}},ExpressionUUID->"aaa308aa-4bbe-4048-a936-\
302c00fdbe73"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full house", "Subsection",
 CellChangeTimes->{{3.714218310594441*^9, 3.714218313636799*^9}, {
   3.714220058411882*^9, 3.714220090386464*^9}, {3.714232505626527*^9, 
   3.714232520560522*^9}, {3.714232655407269*^9, 3.714232664091816*^9}, 
   3.71423296924829*^9, {3.7142331215590467`*^9, 
   3.714233122805006*^9}},ExpressionUUID->"e7fef8c7-98f4-4e67-b82c-\
e9970108a52f"],

Cell[TextData[{
 "First we choose one of seven possibilities to be kind value x, then we \
choose three out of the eight x. And same with the one pair value y, we \
choose one of six possibilities which is left after have choose three card of \
x. The multiplication principle gives the result.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"one", " ", "of", " ", "seven", " ", "cards"}]], "=", 
     TemplateBox[{"7","1"},
      "Binomial"]}]}], TraditionalForm]],ExpressionUUID->
  "f99e9245-279c-498a-a54d-d369b23f8a28"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", 
     RowBox[{"three", " ", "card", " ", "of", " ", "same", " ", "value"}]], 
    "=", 
    TemplateBox[{"8","3"},
     "Binomial"]}], TraditionalForm]],ExpressionUUID->
  "4e4ff33b-5444-46e5-8359-31fdfdd7a7ff"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"one", " ", "of", " ", "six"}]], "=", 
     TemplateBox[{"6","1"},
      "Binomial"]}]}], TraditionalForm]],ExpressionUUID->
  "64e9a7c3-4246-44cb-9843-9903820f9105"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", 
     RowBox[{"two", " ", "card", " ", "of", " ", "each", " ", "value"}]], "=", 
    TemplateBox[{"8","2"},
     "Binomial"]}], TraditionalForm]],ExpressionUUID->
  "f066b5e9-c162-4988-8380-7e3d03bc25dc"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", 
     RowBox[{"full", " ", "house"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", 
       RowBox[{"one", " ", "of", " ", "seven", " ", "cards"}]], 
      SubscriptBox["n", 
       RowBox[{"three", " ", "card", " ", "of", " ", "same", " ", "value"}]], 
      SubscriptBox["n", 
       RowBox[{"one", " ", "of", " ", "six"}]], 
      SubscriptBox["n", 
       RowBox[{"two", " ", "card", " ", "of", " ", "each", " ", "value"}]]}], 
     "=", 
     RowBox[{
      TemplateBox[{"7","1"},
       "Binomial"], 
      TemplateBox[{"8","3"},
       "Binomial"], 
      TemplateBox[{"6","1"},
       "Binomial"], " ", 
      TemplateBox[{"8","2"},
       "Binomial"]}]}]}], TraditionalForm]],ExpressionUUID->
  "44a9bd4f-74b7-46bf-9909-0959cadef4b9"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Therefore]", 
     SubscriptBox["P", 
      RowBox[{"full", " ", "house"}]]}], "=", 
    RowBox[{
     FractionBox[
      SubscriptBox["n", 
       RowBox[{"full", " ", "house"}]], 
      SubscriptBox["n", "tot"]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        TemplateBox[{"7","1"},
         "Binomial"], " ", 
        TemplateBox[{"8","3"},
         "Binomial"], " ", 
        TemplateBox[{"6","1"},
         "Binomial"], 
        TemplateBox[{"8","2"},
         "Binomial"]}], 
       TemplateBox[{"56","5"},
        "Binomial"]], "=", 
      RowBox[{
       FractionBox["392", "22737"], "\[TildeTilde]", 
       RowBox[{"1.724062101", "%"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"15492f8c-1f35-4406-acc7-0d7294ef7cbb"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.714218318579761*^9, 3.714218326967608*^9}, {
   3.714220353633232*^9, 3.71422044639818*^9}, {3.714220476416687*^9, 
   3.714220686008274*^9}, {3.714220716347723*^9, 3.714220770036224*^9}, {
   3.71422080991078*^9, 3.714220835552268*^9}, {3.714220878262947*^9, 
   3.714222035040148*^9}, 3.714222073087813*^9, {3.7142221167772427`*^9, 
   3.714222343020986*^9}, {3.714222399946569*^9, 3.714222662373934*^9}, {
   3.714231391582747*^9, 3.71423146800832*^9}, {3.7142315534559507`*^9, 
   3.714231567120504*^9}, {3.71423163639709*^9, 3.7142316371502123`*^9}, {
   3.714231671382752*^9, 3.714231742537078*^9}, 3.7142317809861727`*^9, {
   3.714231862189145*^9, 3.714231868774063*^9}, {3.714231937675161*^9, 
   3.714232141036909*^9}, {3.7142321803339853`*^9, 3.714232213515018*^9}, {
   3.714232266914028*^9, 3.714232393167102*^9}, {3.714232432185128*^9, 
   3.714232479708544*^9}, {3.7142328899255037`*^9, 3.714232931317552*^9}, 
   3.71423318227358*^9, {3.714234290174356*^9, 
   3.7142343120021544`*^9}},ExpressionUUID->"e55ce36d-b431-407f-b3e1-\
3388dfd49e50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3 of a kind", "Subsection",
 CellChangeTimes->{{3.714218310594441*^9, 3.714218313636799*^9}, {
  3.714220058411882*^9, 3.714220090386464*^9}, {3.714232505626527*^9, 
  3.714232520560522*^9}, {3.714232655407269*^9, 3.714232664091816*^9}, {
  3.714233139685956*^9, 
  3.714233141718317*^9}},ExpressionUUID->"cd0c338d-9510-4eed-b719-\
0076d92ca1f2"],

Cell[TextData[{
 "In order to find 3 kind, we choose one of seven possibilities of value x, \
we take three cards out of eight. Then we can just take randomly 2 cards out \
of 48 cards without value x. Secondly we need to subtract full house to get \
the right answer.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"one", " ", "of", " ", "seven", " ", "cards"}]], "=", 
     TemplateBox[{"7","1"},
      "Binomial"]}]}], TraditionalForm]],ExpressionUUID->
  "c25cc4f7-f3b2-4c28-96d2-2360d1d09348"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", 
     RowBox[{"three", " ", "card", " ", "of", " ", "same", " ", "value"}]], 
    "=", 
    TemplateBox[{"8","3"},
     "Binomial"]}], TraditionalForm]],ExpressionUUID->
  "d768be5c-83da-42ef-b929-154bd5f304b3"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"2", " ", "out", " ", "of", " ", "48"}]], "=", 
     TemplateBox[{"48","2"},
      "Binomial"]}]}], TraditionalForm]],ExpressionUUID->
  "aef656ab-a70c-495d-8534-ba967abfcc44"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", 
     RowBox[{"three", " ", "kind"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", 
       RowBox[{"one", " ", "of", " ", "seven", " ", "cards"}]], 
      SubscriptBox["n", 
       RowBox[{"three", " ", "card", " ", "of", " ", "same", " ", "value"}]], 
      SubscriptBox["n", 
       RowBox[{"2", " ", "out", " ", "of", " ", "48", " "}]]}], "=", 
     RowBox[{
      TemplateBox[{"7","1"},
       "Binomial"], 
      TemplateBox[{"8","3"},
       "Binomial"], 
      TemplateBox[{"48","2"},
       "Binomial"], " "}]}]}], TraditionalForm]],ExpressionUUID->
  "9ba14f09-599c-4918-a1ad-329151787aae"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Therefore]", 
     SubscriptBox["P", 
      RowBox[{"three", " ", "kind"}]]}], "=", 
    RowBox[{
     FractionBox[
      SubscriptBox["n", 
       RowBox[{"three", " ", "kind"}]], 
      SubscriptBox["n", "tot"]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         TemplateBox[{"7","1"},
          "Binomial"], " ", 
         TemplateBox[{"8","3"},
          "Binomial"], " ", 
         TemplateBox[{"48","2"},
          "Binomial"]}], " ", "-", " ", 
        RowBox[{"full", " ", 
         RowBox[{"house", "(", 
          RowBox[{
          "taking", " ", "the", " ", "value", " ", "from", " ", "earlier"}], 
          ")"}]}]}], 
       TemplateBox[{"56","5"},
        "Binomial"]], "=", 
      RowBox[{
       FractionBox["2240", "22737"], "\[TildeTilde]", 
       RowBox[{"9.851783437", "%"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"66f1a956-b4e5-483e-bfb2-90cab2c4c53d"]
}], "Text",
 CellChangeTimes->{{3.714218318579761*^9, 3.714218326967608*^9}, {
   3.714220353633232*^9, 3.71422044639818*^9}, {3.714220476416687*^9, 
   3.714220686008274*^9}, {3.714220716347723*^9, 3.714220770036224*^9}, {
   3.71422080991078*^9, 3.714220835552268*^9}, {3.714220878262947*^9, 
   3.714222035040148*^9}, 3.714222073087813*^9, {3.7142221167772427`*^9, 
   3.714222343020986*^9}, {3.714222399946569*^9, 3.714222662373934*^9}, {
   3.714231391582747*^9, 3.71423146800832*^9}, {3.7142315534559507`*^9, 
   3.714231567120504*^9}, {3.71423163639709*^9, 3.7142316371502123`*^9}, {
   3.714231671382752*^9, 3.714231742537078*^9}, 3.7142317809861727`*^9, {
   3.714231862189145*^9, 3.714231868774063*^9}, {3.714231937675161*^9, 
   3.714232141036909*^9}, {3.7142321803339853`*^9, 3.714232213515018*^9}, {
   3.714232266914028*^9, 3.714232393167102*^9}, {3.714232432185128*^9, 
   3.714232479708544*^9}, {3.7142328899255037`*^9, 3.714232931317552*^9}, 
   3.714233173991304*^9, 
   3.714234325628119*^9},ExpressionUUID->"bf0f5e7a-9793-4b33-9aef-\
a3f07846c8fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["4 of a kind", "Subsection",
 CellChangeTimes->{{3.714218310594441*^9, 3.714218313636799*^9}, {
  3.714220058411882*^9, 3.714220090386464*^9}, {3.714232505626527*^9, 
  3.714232520560522*^9}, {3.714232655407269*^9, 3.714232664091816*^9}, {
  3.714233146008067*^9, 
  3.714233147255228*^9}},ExpressionUUID->"1ea478ad-b0d0-4a48-b01e-\
5926ecc3900d"],

Cell[TextData[{
 "To calculate four kind we take one of seven possibilities and we can choose \
four of eight cards with same value. There are one card that we can choose \
out of 48 cards.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["n", "value"], "=", 
     TemplateBox[{"7","1"},
      "Binomial"]}], ",", 
    RowBox[{
     SubscriptBox["n", 
      RowBox[{"4", "cards"}]], "=", 
     TemplateBox[{"8","4"},
      "Binomial"]}], ",", " ", 
    RowBox[{
     SubscriptBox["n", "last"], "=", 
     TemplateBox[{"48","1"},
      "Binomial"]}]}], TraditionalForm]],ExpressionUUID->
  "40497084-9d48-416a-b954-4770f1903934"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["n", "4"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["n", "value"], 
      SubscriptBox["n", 
       RowBox[{"4", "cards"}]], 
      SubscriptBox["n", "last"]}], "=", 
     RowBox[{
      TemplateBox[{"7","1"},
       "Binomial"], " ", 
      TemplateBox[{"8","4"},
       "Binomial"], 
      TemplateBox[{"48","1"},
       "Binomial"]}]}]}], TraditionalForm]],ExpressionUUID->
  "1b915402-504b-426e-88aa-bf4c55a3ca89"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Therefore]", 
     SubscriptBox["P", "4"]}], "=", 
    RowBox[{
     FractionBox[
      SubscriptBox["n", "4"], 
      SubscriptBox["n", "tot"]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        TemplateBox[{"7","1"},
         "Binomial"], " ", 
        TemplateBox[{"8","4"},
         "Binomial"], 
        TemplateBox[{"48","1"},
         "Binomial"]}], 
       TemplateBox[{"56","5"},
        "Binomial"]], "=", 
      RowBox[{
       FractionBox["23520", "3819816"], "=", 
       RowBox[{
        FractionBox["140", "22737"], "\[TildeTilde]", 
        RowBox[{"0.615736", "%"}]}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"3aa605c1-d97b-42fd-a1c7-40ebe15c6a0f"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.714218318579761*^9, 3.714218326967608*^9}, {
   3.714220353633232*^9, 3.71422044639818*^9}, {3.714220476416687*^9, 
   3.714220686008274*^9}, {3.714220716347723*^9, 3.714220770036224*^9}, {
   3.71422080991078*^9, 3.714220835552268*^9}, {3.714220878262947*^9, 
   3.714222035040148*^9}, 3.714222073087813*^9, {3.7142221167772427`*^9, 
   3.714222343020986*^9}, {3.714222399946569*^9, 3.714222662373934*^9}, {
   3.714231391582747*^9, 3.71423146800832*^9}, {3.7142315534559507`*^9, 
   3.714231567120504*^9}, {3.71423163639709*^9, 3.7142316371502123`*^9}, {
   3.714231671382752*^9, 3.714231742537078*^9}, 3.7142317809861727`*^9, {
   3.714231862189145*^9, 3.714231868774063*^9}, {3.714231937675161*^9, 
   3.714232141036909*^9}, {3.7142321803339853`*^9, 3.714232213515018*^9}, {
   3.714232266914028*^9, 3.714232393167102*^9}, {3.714232432185128*^9, 
   3.714232479708544*^9}, {3.7142328899255037`*^9, 3.714232931317552*^9}, {
   3.714233162401322*^9, 3.714233163216445*^9}, 
   3.714234416652052*^9},ExpressionUUID->"07ebcf99-50ce-40f7-98e2-\
d021de373c19"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",ExpressionUUID->"7070a222-c954-44f1-b08f-19eccd9931ef"],

Cell["Flush", "Text",
 CellChangeTimes->{{3.7142202601119957`*^9, 
  3.714220262451099*^9}},ExpressionUUID->"137f45b8-466e-4b12-a245-\
358ba9a900e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flushBinom", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"14", ",", "5"}], "]"}], "*", 
      RowBox[{"Binomial", "[", 
       RowBox[{"4", ",", "1"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"3", ",", "1"}], "]"}], "*", 
      RowBox[{"Binomial", "[", 
       RowBox[{"8", ",", "1"}], "]"}], "*", "16"}]}], ")"}], "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{"56", ",", "5"}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{
  3.71422011967599*^9, {3.714220240923038*^9, 3.714220269516529*^9}, {
   3.7142489870798693`*^9, 
   3.7142490384608765`*^9}},ExpressionUUID->"3f8072dc-c651-4631-9a78-\
250eaf88d6b5"],

Cell[BoxData[
 FractionBox["953", "477477"]], "Output",
 CellChangeTimes->{3.71422027276156*^9, 3.7142488812553787`*^9, 
  3.714249378090627*^9, 3.7143595042208333`*^9, 3.7143717634840813`*^9, 
  3.7144687928487554`*^9, 
  3.714547177352152*^9},ExpressionUUID->"e21be6a7-36e2-4697-96ed-\
4db3354ccbaf"]
}, Open  ]],

Cell["Straight", "Text",
 CellChangeTimes->{
  3.714220128687234*^9, {3.7142202807768927`*^9, 3.7142202823554583`*^9}, 
   3.7142214235358343`*^9},ExpressionUUID->"c1117599-a9f1-4e33-a3da-\
2e7df13141f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"straightBinom", "  ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"3", ",", "1"}], "]"}], "*", 
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"8", ",", "1"}], "]"}], "^", "5"}]}], "-", 
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"3", ",", "1"}], "]"}], "*", 
      RowBox[{"Binomial", "[", 
       RowBox[{"8", ",", "1"}], "]"}], "*", "16"}]}], ")"}], "/", 
   RowBox[{"Binomial", "[", 
    RowBox[{"56", ",", "5"}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{
  3.714249045236645*^9},ExpressionUUID->"14a7af2b-aff4-417f-b8c1-\
a00955798001"],

Cell[BoxData[
 FractionBox["1360", "53053"]], "Output",
 CellChangeTimes->{3.714233238311162*^9, 3.714248881290374*^9, 
  3.7142493781131473`*^9, 3.714359504230838*^9, 3.7143717634945993`*^9, 
  3.7144687928637657`*^9, 
  3.7145471773671646`*^9},ExpressionUUID->"c0190e8f-8a0c-494e-8287-\
a2ad4fe596b3"]
}, Open  ]],

Cell["Full house", "Text",
 CellChangeTimes->{{3.7142202854288883`*^9, 
  3.7142202876174507`*^9}},ExpressionUUID->"1b566564-6dc4-4b53-8c8a-\
53f2d54ec2db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullHouseBinom", " ", "=", " ", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"7", ",", "1"}], "]"}], "*", 
   RowBox[{"Binomial", "[", 
    RowBox[{"8", ",", "3"}], "]"}], "*", 
   RowBox[{"Binomial", "[", 
    RowBox[{"6", ",", "1"}], "]"}], "*", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"8", ",", "2"}], "]"}], "/", 
    RowBox[{"Binomial", "[", 
     RowBox[{"56", ",", "5"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{3.714220159486287*^9, 
  3.714249051317943*^9},ExpressionUUID->"1171a6e4-df71-4d36-a3d2-\
d32639938f47"],

Cell[BoxData[
 FractionBox["392", "22737"]], "Output",
 CellChangeTimes->{3.7142321508955793`*^9, 3.7142488813193808`*^9, 
  3.7142493781366634`*^9, 3.714359504238834*^9, 3.7143717635020866`*^9, 
  3.714468792877768*^9, 
  3.714547177385809*^9},ExpressionUUID->"9c9bff1f-bc30-4b08-9762-\
602c688af593"]
}, Open  ]],

Cell["3 of a kind", "Text",
 CellChangeTimes->{{3.714220295263713*^9, 
  3.71422029695223*^9}},ExpressionUUID->"79963b45-092c-4041-b115-\
dca4868e6f4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"threeKindBinom", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Binomial", "[", 
      RowBox[{"7", ",", "1"}], "]"}], "*", 
     RowBox[{"Binomial", "[", 
      RowBox[{"8", ",", "3"}], "]"}], "*", 
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"48", ",", "2"}], "]"}], "/", 
      RowBox[{"Binomial", "[", 
       RowBox[{"56", ",", "5"}], "]"}]}]}], ")"}], " ", "-", " ", 
   "fullHouseBinom", " "}]}]], "Input",
 CellChangeTimes->{{3.714220169983883*^9, 3.714220176716921*^9}, {
   3.714231376156931*^9, 3.714231377715528*^9}, {3.7142490572264643`*^9, 
   3.7142490634528084`*^9}, 
   3.714359245200797*^9},ExpressionUUID->"b7de0ab2-7b63-457c-a58a-\
4990b11ffa5e"],

Cell[BoxData[
 FractionBox["2240", "22737"]], "Output",
 CellChangeTimes->{3.714232162833624*^9, 3.714248881340906*^9, 
  3.714249378194705*^9, 3.7143595042478557`*^9, 3.714371763511837*^9, 
  3.7144687928937836`*^9, 
  3.714547177399819*^9},ExpressionUUID->"f087c866-6658-4a3e-8f31-\
2b4bf2bdf6d8"]
}, Open  ]],

Cell["4 of a kind", "Text",
 CellChangeTimes->{{3.714220300494767*^9, 
  3.714220301623448*^9}},ExpressionUUID->"8c2b51a8-bd0f-4864-ac1f-\
76a453a70220"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourKindBinom", "  ", "=", " ", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"7", ",", "1"}], "]"}], "*", 
   RowBox[{"Binomial", "[", 
    RowBox[{"8", ",", "4"}], "]"}], "*", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"48", ",", "1"}], "]"}], "/", 
    RowBox[{"Binomial", "[", 
     RowBox[{"56", ",", "5"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{3.714220193503192*^9, 
  3.714249068237342*^9},ExpressionUUID->"18290eac-1ee8-456f-8c6a-\
4b6306e1b3a6"],

Cell[BoxData[
 FractionBox["140", "22737"]], "Output",
 CellChangeTimes->{3.714233226406983*^9, 3.7142488813613496`*^9, 
  3.714249378220723*^9, 3.7143595042548447`*^9, 3.714371763518843*^9, 
  3.714468792914334*^9, 
  3.7145471774128275`*^9},ExpressionUUID->"c4b82aaf-72d7-4599-aeb3-\
2bef2bc3c903"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 1c: Poker Probability by Monte Carlo method", "Subchapter",
 CellChangeTimes->{{3.714053895716298*^9, 3.7140539022668533`*^9}, {
  3.7140539346811123`*^9, 
  3.7140540063686576`*^9}},ExpressionUUID->"058e3f1a-ad0a-4b1f-b272-\
2e194e45a5d3"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.714282723406358*^9, 
  3.714282723524498*^9}},ExpressionUUID->"e18d813d-c3a0-4ec2-8487-\
1710e6d33005"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"8ef397d5-65d7-43b5-81d7-0e0ae1b7d706"],

Cell["\<\
In this task we are going to calculate the probability of getting one pair \
using the Monte Carlo method. We will also draw a diagram that shows how the \
probability estimate stabilises with increasing sample size. This task will \
also be compared to task 1a to check if our approximate answer is close to \
the exact answer.\
\>", "Text",
 CellChangeTimes->{
  3.714059082340211*^9, {3.714059160323721*^9, 3.7140593553282995`*^9}, {
   3.714135333001799*^9, 3.714135333162261*^9}, {3.714234494601787*^9, 
   3.714234516410473*^9}, {3.714234553103148*^9, 
   3.714234557751285*^9}},ExpressionUUID->"792326df-9f8d-4e89-a3c0-\
2d11fbb08008"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsection",ExpressionUUID->"f6e4317a-39c6-4e8a-bbe6-2a04bb1896cf"],

Cell["\<\
Using Monte Carlo method to estimate the probability of getting one pair \
after 3000 games. We came up with a probability of 53.133 % after 3000 \
hands/games. Each game is defined as one hand with 5 cards each hand. The \
result from estimation of Monte Carlo can compare with the result from task 1 \
which is 52.426 %.
\
\>", "Text",
 CellChangeTimes->{{3.714212198125621*^9, 3.714212330674755*^9}, {
  3.714212371838933*^9, 3.7142123864145*^9}, {3.714212441702546*^9, 
  3.71421265166899*^9}, {3.714217049093588*^9, 3.714217104310474*^9}, {
  3.714234581043782*^9, 
  3.714234590203226*^9}},ExpressionUUID->"0e99f7ad-4d42-4fe6-aec4-\
402f6f963a2c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating probability of one pair using Monte Carlo", "Section",
 CellChangeTimes->{{3.714212721794471*^9, 
  3.7142127327525997`*^9}},ExpressionUUID->"76d2d6b7-d4c6-4119-8b16-\
f3a781920f15"],

Cell[CellGroupData[{

Cell["Solution to calculate one pair", "Subsection",
 CellChangeTimes->{{3.714212769234908*^9, 
  3.714212784842428*^9}},ExpressionUUID->"21ead853-d031-4e23-913a-\
7aa253b1eb5d"],

Cell["\<\
We start with randomly choosing 5 cards from the decks which represent as a \
randomly hand.
Secondly we work numerically starting by multiplying the randomly hand with \
100 up to 3000 times, which represent the amount of hand. For each hand which \
is a pair will count as true and false otherwise using the code from task 1. \
And for every true is counted as 1 and false 0. 

We count all the trues and dividing it by the amount of hands we created \
which gives the probability of one pair using Monte Carlo. We can observe \
that the result is varying a lot ranging 1 to 500 hands/games. The result \
quickly stabilize and converge after 500 games and even more after 1000 games \
that as we can see in the diagram below.
\
\>", "Text",
 CellChangeTimes->{
  3.714212755954652*^9, {3.7142127931175632`*^9, 3.714213052385282*^9}, {
   3.714215134612726*^9, 3.714215390494322*^9}, 3.71421542347957*^9, {
   3.7142154635293427`*^9, 3.714215467196919*^9}, {3.7142166273710938`*^9, 
   3.714216638446554*^9}, {3.71421674333932*^9, 3.714216752960088*^9}, {
   3.714216785169688*^9, 3.7142169200931168`*^9}, {3.714217847739373*^9, 
   3.7142178505486937`*^9}, {3.714234672406522*^9, 3.7142346810410957`*^9}, {
   3.714234746569878*^9, 
   3.7142347679730167`*^9}},ExpressionUUID->"e5b96b34-4cdc-4f35-b163-\
21b0d37f7862"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{"Games", ",", "#"}], 
      RowBox[{"Probability", ",", "%"}]},
     {"100", "57"},
     {"200", "53.212"},
     {"300", "53"},
     {
      RowBox[{
      "400", "\[IndentingNewLine]", "500", "\[IndentingNewLine]", "600", 
       "\[IndentingNewLine]", "700", "\[IndentingNewLine]", "800", 
       "\[IndentingNewLine]", "900", "\[IndentingNewLine]", "1000", 
       "\[IndentingNewLine]", "1500", "\[IndentingNewLine]", "2000", 
       "\[IndentingNewLine]", "2500", "\[IndentingNewLine]", "3000"}], 
      RowBox[{
      "49.752", "\[IndentingNewLine]", "48.8", "\[IndentingNewLine]", 
       "56.333", "\[IndentingNewLine]", "50.571", "\[IndentingNewLine]", "50",
        "\[IndentingNewLine]", "55.223", "\[IndentingNewLine]", "51.721", 
       "\[IndentingNewLine]", "52.273", "\[IndentingNewLine]", "52", 
       "\[IndentingNewLine]", "51.447", "\[IndentingNewLine]", "53.133"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], TraditionalForm]],
  CellChangeTimes->{{3.714135122428233*^9, 3.7141351510148706`*^9}, {
   3.7141351901105328`*^9, 3.71413521820566*^9}, {3.714135250203578*^9, 
   3.714135264833612*^9}},ExpressionUUID->
  "541b5af3-b374-4e59-92c2-4e850c84b54f"],
 " "
}], "Text",
 CellChangeTimes->{{3.714216258008161*^9, 3.714216455696663*^9}, {
  3.7142165837639837`*^9, 3.714216593573244*^9}, {3.714216648559121*^9, 
  3.714216705068845*^9}, {3.714216915556653*^9, 3.714217041775729*^9}, {
  3.714217107833136*^9, 3.714217151029608*^9}, {3.7142178464482517`*^9, 
  3.714217898735742*^9}, {3.71421793312885*^9, 3.714218000864211*^9}, {
  3.714218075534422*^9, 3.714218264875896*^9}, {3.714234835773046*^9, 
  3.714234881256771*^9}},ExpressionUUID->"30151a46-c2fc-4e8d-9002-\
a859712771a0"],

Cell["\<\
The table above demonstration the probability with the responding amount of \
games.\
\>", "Text",
 CellChangeTimes->{{3.714234879775189*^9, 
  3.714234976426587*^9}},ExpressionUUID->"a50c6d79-690a-43e9-b46e-\
00e87dac7a0f"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
   "The", " ", "amount", " ", "of", " ", "games", " ", "is", " ", 
    "determined", " ", "to", " ", "be", " ", "3000", " ", "games", " ", "in", 
    " ", "this", " ", 
    RowBox[{"case", ".", "The"}], " ", "reason", " ", "is", " ", "that", " ", 
    "in", " ", "the", " ", "diagram", " ", "below"}], ",", 
   RowBox[{
   "we", " ", "can", " ", "see", " ", "the", " ", "probability", " ", "begin",
     " ", "to", " ", "converge", " ", "after", " ", "a", " ", "few", " ", 
    "hundred", " ", "of", " ", "games", " ", "and", " ", "the", " ", "line", 
    " ", "is", " ", "varying", " ", "much", " ", "less", " ", "after", " ", 
    "2000", " ", "games", " ", "comparing", " ", "to", " ", "the", " ", 
    RowBox[{"beginning", ".", " ", "The"}], " ", "principle", " ", "is", " ", 
    "that", " ", "with", " ", "more", " ", "data"}], ",", 
   RowBox[{
   "the", " ", "method", " ", "gives", " ", "more", " ", "confidence", " ", 
    "in", " ", 
    RowBox[{"it", "'"}], "s", " ", 
    RowBox[{"result", "."}]}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{
  3.714215427168742*^9, 3.7142154606022787`*^9, 3.714234807761907*^9, {
   3.7142348379375896`*^9, 3.714234846808968*^9}, 3.714235007004838*^9},
 GridBoxOptions->{
 GridBoxAlignment->{
  "Columns" -> {{
     Left}}}},ExpressionUUID->"4290f13e-9f01-45bc-9c3a-2aaeeec4452f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
2fVPLULx/GmZVBLJQ6l5Fp+S3UKxQmizfas22c/wJnGdsFDYB1l4S5YzYCc7
Y7goLRSiriL876xoHPCtjbp3NhQ2HNdcTzZT2HM/vCrgWig2qAy9eW5J9JVD
d0TpXijKE/1WPyffF9q/fMVMeygo67UJrvwUWHNfal15E4pe7iNDT5sozL47
72c3FYpfTy/vbbKgMSDjVCL2OxTVL7V+aZD+bfFWfPmaKwzOX3X9H8gT/qn7
wZkjEgbe/p81wSRfFLI9Uj2wOQzLoqStOGYopOknOXOrhUHRIHWWPYeJ4JwD
+U+oMHAbmxw6QPjc4b/V7dFHwsBX/DUy5z+iB9LDv3c7h6H175T50W1M7PEq
k/sZGIaaLLNCqzdEv+96W9QkhkHyzqEi/kgKwqy70j1yw2CgOBPdG0n8SI/1
webSMMQpp+k+U6cxe6r909gtMl/8oMPY//L72yzxoidhEBXa0a3bQKNV0vyA
+cswnK9Y/WbZBsLDHhLRwu/D4HSALfbpFQaKb09X9XwLQ/J6l1WvLlNIX3Rz
JI0jHIVLz7A9macRTIetoITCIctHX7X6TsEhS1ubTTIcK/g2Pvt4jQnjAR7/
ByrhOHvx3dP75L6wqa8kWDscS60cfxsWE953L3ipcjAc6XVenJsI36665bDk
s104lDao5ewVosDGorDzmi/53hqPtnDiD7OM786OseFYuVb4rijJ029PPMjf
cCoclnVjahx7KLS9Tmh/eyEcxZUpX7lJvdVuNFzIrQ7HXkkF8X7id68upcVo
N4SjSqBRlVlAY0GqnetLdzgmawZd5UheW1e25GTBf+HoDRhOi/1AYa+czmrm
TDjYe399k5OmYFceU/h9IRySS19/mJ+mEa/4SOrisgj4ZVrdWEHywZWqv+WG
IhFQ93vswUX8tENZffsf6Qj83NVx07OJgU+1Qfev7IiAUllLaPZHGgI7b2mZ
6kRAenfe+DfCsyp18+2LD0ZAx21TLrOIxuHdSsYVthGQ4uRWu0XyU8gDj9dH
vSOQFFok+pjwXcHe69ZLoiJwxN33gegfCg8fT07UZESg3Dwelgf0MKIt7Wld
EIGxS3OhsoYMcLTYf+e5HoFV4Rx8xwMYkKYvhN+ti4Dejs/nNrXSYHa8Y3ds
i8CLjCuHCi7QcDdYlyb4KgLsOllrlsRQONF9dMXD9xGgFH+ZSmqT+jfKO+P6
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
Gd3En7Pk5zUUi8wzKOTU2xQe/kHW113DmPtOQc4k/Patf4kwOfAoen8kEw0f
8rqFOJNw69AVvleqFA5H3Jzw401Cwqa8nhrCXzMrnrG8WJmEwrWpPRfzKMSW
Ta9SFk1CQcdS+UaiRyJYsjVLIgmhpQsy5neJ/7/YSH2RTcLui37DhuJM6BzX
sD6wLQmVpyRMHk/QGGA5GlSploSp4NHtl8j9euf4n1i+LwnX0pPClwYT/ZQ7
ecWdSoLDxGCIoz2FgkfXH3UaJmHrlOhAwR0ayodaX8kdTsJSyyOfnB2If0+P
fk6xTEIdO5vp5A8aVtEsXFMOSVAYb1EQ9SF5SXjtBto9Cct4S6o4SphIvb5D
7YpfEhSZmhMmZH0bNI2NloQlwX1aJW/fISZu97u7OMYmIe9W2d//tEjecU+O
bk5JgtjZwbblo0yMspbkb8pKwrZzXpu2hBM+yntUFZufhEm2YJvIIwzwKbxt
GylKwmXhrp7Wo0TPGn8M77uShIFFU3f6z9BQN1vxu6gyCetXG4qZER7v+aQg
uOh2Epy/S9xuIrzvFMeUtXqQhHU52pU6RO/+ijhqPmhOArtZ0lMJXSZOVUYf
XdeVhBfr+NhefaaxWafAJ+xFEtKzrDMukjz28M2dlIGBJMw8un6CvZeGqdeL
C7tGk8Bb9vFSThqNaY7PdflTSaDTj0ofJfuPPsv9/OeXJIjv3rGyh4xfpSQ9
ffhXEuynO46kkX4of6LJdntRMtaf8zKbrKWgZWG5VnhpMrY/Xd16J574yZdg
ZX++ZGR1ui5WIH7imZij90I4GbcFLjTY59DgWFdlpyyWjIqh5edM9tE4W90Z
miWZjI3RQf47aeL31IdTX+ST0RVv9CV5G42WQbbrB1SSkeMz2/f1CI1jvuJN
lerJmC5awZ6c8b88rv52uVYyQiyXydYSf04+f+irOzMZlV4NPIavKIir+PB0
GSXjO3/zEzNXJmrb0jfJm5HvFfnPcSfrQs+qbHeqdTIcK9s27yF6O/y16eCU
UzJMxE+HtZb/79/vhtxoz2S8mfqjcobkbd71f+KuBCRjjrqZO32exsXaVQVL
IpIRZCcoN3icCTU95VrH+GTsvZGgTlXQ6B7a39WcRs6rY2wqXJ+GQ8Dx8U3Z
yTiz+pLmnSnCQ9wJf2PPJoP39U+btxoMnCwuFhq9kIzfA8vpP1FMSKnWb9G8
mgwui7e7PfZTWKi/fAfVydi8Z2eJziomurVPaO2pS8YWd3u3dn6yno7gp7se
J0M9ZnRPpS1Zv7Gd2c72ZGjdl9zycBcTeq/1x7b3JqNF1NjKhvSTuPUOT+U3
yWCr2+7tdlAP8+/Ff28dScaJ7tKto6cYaHHnileYSoZQWGTYZ8JbZ7/O8cnP
kf0GcPrNh5P7DX17ZvPvZHRscAn4Tc5fi/WJpDRrClg2CbO8Ife7OrnyxqZl
KdBpH19aXEz0gy9ffaNgCt40nvobVE305nTME/E1Kbi3+sDfj8Svcta5Ga3b
mIKnPF6LuwifuVwyfbtGNgUtDyai2Mn7PXJwWr0tBX9vi3cVEr8QqJaZE9pF
5qPlBv8j/Da+UzB8hWYKuH3XdrrYM1H3cGGJADMFMvp5SyeIX2bqjmctN07B
pWBDv5Z+CnZdT9fxHE2BpNVtlu2Ev1UP3rnCZZuCMOetpyTJfXEPFCsvOZ4C
uTXnFFtbCD/ZpD5g90nBAENAQEuBRs0HP5o1JAVWt9f8KZGikehp+YIlJgWs
vGc2jBNesPjOsPqbnIK4LRtLlT8woRSuNPX7ZAoWT6YMHyB5iYN9rf/P/BQc
j+d8pnGL9E8K+6LvxSlYeTylVYX0Q7nAp5T5shSUsgvddyF5JTqvX+hLVQpe
jr36U1RG8rN4Q9Gnu2T8HmXxOsKrmy9flfvYkIIrVkZcsodo/JPPvjXZloLC
9b5JB/t08bwmfN9ETwoMiuQPsdtQKN3l1Dn2OgUfT2etiAThnYYDh0eGU/Cp
dLP6o2UUDKldI+8mU9DPly+6ifCaRLeE++CXFEiYZtrmyTLxw5T355tfKfhW
a/M58iITHW+/x7xanArpiri1v8IoFNoN8b7kSkXP17zTliuY8J1qy3sukIrq
I78+nrfRA8O7RqJHJBXmOy4JcJD8u/bnuYqnG1Ih+GvOpWAZjc8RCWqdm1Ox
wth9ozqTRjOHV1ObUiqcnbvPquUykZ9mZtiilgqF91zdMqTf3VdovWnal4rL
L1Z2yBwjPHRG3uExnQq7muc1rvcoCG0Q/vzQKBUJlx/3OD0jvFzKElpvlopm
XqVdw6R+6xUmOe7ZpCJAfPN4ZQnJQ7W9J+64pEJ+Zaewaj4TDrvvr73lnYrP
NUzhrcdpqDWWXK4JTkWt1frcNFGiD8xMparoVIglMmPMDGiMPAu6X5Gciuvr
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
bDw9OefGgabYiHevXhHwPzJkCcI=
       "]]},
     Annotation[#, "Charting`Private`Tag$24966#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Game\"", TraditionalForm], 
    FormBox["\"Probability, %\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{732.3624999999998, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2999.9999387959183`}, {-10., 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"c262232c-8a66-\
4563-b807-333472bdc5c3"],

Cell["\<\
The diagram above illustrate the probability of getting one pair using Monte \
Carlo method with increasing games/hands.\
\>", "SmallText",
 CellContext->Cell,
 CellChangeTimes->{{3.714215433564063*^9, 3.714215434826227*^9}, {
  3.714215478922594*^9, 3.714215541274396*^9}, {3.714217160678052*^9, 
  3.71421716179792*^9}, {3.714234810689582*^9, 
  3.7142348242255363`*^9}},ExpressionUUID->"b9907cd1-024e-474c-a409-\
d27f2c2acac5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",ExpressionUUID->"fbd1f9a1-a6d0-4050-b121-9116ab4235d0"],

Cell["\<\
We are using the deck and randomly select 5 cards which represent a play or a \
hand.\
\>", "Text",
 CellChangeTimes->{{3.7142172224416857`*^9, 3.714217252085451*^9}, {
  3.714217351174152*^9, 
  3.7142173954274*^9}},ExpressionUUID->"41e0dfa2-3dc5-4e02-a854-537a69808475"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "play", "]"}], "\[IndentingNewLine]", 
 RowBox[{"play", " ", ":=", " ", 
  RowBox[{"Sort", "/@", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{"deck", ",", " ", 
       RowBox[{"1", "*", "5"}]}], "]"}], ",", " ", "5"}], "]"}], 
   "  "}]}]}], "Input",ExpressionUUID->"736102ad-33f4-423f-9812-af53ab6c1716"],

Cell["\<\
Create the function omega3 where the parameter is used to multiply the play\
\>", "Text",
 CellChangeTimes->{{3.714217316508348*^9, 3.714217347440935*^9}, 
   3.714217412265703*^9, {3.71421746567622*^9, 
   3.71421746613299*^9}},ExpressionUUID->"acfb4b77-c204-409a-add6-\
765978ef40ce"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "omega3", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"omega3", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{"play", ",", " ", 
      RowBox[{"{", "n", "}"}]}], "]"}]}], ";"}], "  "}]}], "Input",ExpressionU\
UID->"9a5a65b7-f670-4645-8e51-6698e0cc392b"],

Cell["\<\
Example, creating a table with n = 2000, which says the function creates 2000 \
plays or hands.\
\>", "Text",
 CellChangeTimes->{{3.7142174816683073`*^9, 3.714217483762725*^9}, {
  3.714217526402823*^9, 
  3.714217565722316*^9}},ExpressionUUID->"90b8ae16-7bdf-43e5-8d0a-\
c48d7ce37f03"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"omega3", "[", "n_", "]"}], " ", ":=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{"play", ",", " ", 
      RowBox[{"{", "n", "}"}]}], "]"}]}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{"omega3", "[", "n", "]"}]}], "Input",
 CellChangeTimes->{{3.714249547905917*^9, 
  3.7142495550403805`*^9}},ExpressionUUID->"ae849b93-454f-4cfb-a31d-\
cf63d5440ba9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"108", ",", "109", ",", "111", ",", "212", ",", "410"}], 
             "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"112", ",", "211", ",", "211", ",", "311", ",", "409"}], 
             "}"}], "}"}], ",", 
           TemplateBox[{"1997"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"108", ",", "109", ",", "312", ",", "411", ",", "413"}], 
             "}"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{90., {84., 25.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{82., {45., 25.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 62, 23819276297616322685, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{94., {84., 25.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 62, 23819276297616322685, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{88., {1., 17.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 62, 23819276297616322685, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{94., {84., 25.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23819276297616322685 === $SessionID, 
   Out[62], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.714248881786152*^9, 3.714249380529153*^9, 
  3.71435950438097*^9, 3.714371763670969*^9, 3.7144687930815334`*^9, 
  3.714547178767533*^9},ExpressionUUID->"e8c15e02-d86a-40bc-8e82-\
211f880b99bc"]
}, Open  ]],

Cell["\<\
Function p3 is calculating the probability of one pair from random selected \
hands.\
\>", "Text",
 CellChangeTimes->{{3.714217622320526*^9, 
  3.714217675607682*^9}},ExpressionUUID->"20f319d2-e37e-4c44-a474-\
02182aa0deb5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pair3", "[", "play_", "]"}], " ", ":=", " ", 
  RowBox[{"Or", "@@", 
   RowBox[{"pairQs", "/@", "play"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p3", "[", "n_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{
        RowBox[{"omega3", "[", "n", "]"}], ",", " ", 
        RowBox[{"_", "?", 
         RowBox[{"(", "pair3", ")"}]}]}], "]"}], "*", "100"}], ")"}], "/", 
    RowBox[{"(", "n", ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.714235025570528*^9, {3.71424892130087*^9, 
   3.7142489334306955`*^9}},ExpressionUUID->"50b8a279-954b-451b-9acc-\
5e93c515e7f6"],

Cell["\<\
Plot is used in order to create a diagram which illustrates the probability \
with increasing games/hands. \
\>", "Text",
 CellChangeTimes->{{3.714217753315976*^9, 
  3.7142178314754*^9}},ExpressionUUID->"c684ff3d-6083-44de-be3e-31f9bc759196"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"p3", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "3000"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Game\>\"", ",", " ", "\"\<Probability, %\>\""}], "}"}]}], 
   ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.1"}], "*", "100"}], ",", 
      RowBox[{"1", "*", "100"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.71421721709503*^9, {3.714217258068945*^9, 3.7142172708828163`*^9}, {
   3.714217460005604*^9, 3.714217524455298*^9}, {3.714217577927135*^9, 
   3.714217590121995*^9}, 3.714217678860695*^9, {3.714217711590127*^9, 
   3.714217747847443*^9}},ExpressionUUID->"a803976f-344c-4914-b84b-\
94f955d43743"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
KdWFCR79W4yfoV+4tTnipL8bE8KHFu3SR/5eusda0diDCdVGT4y/oT77Wag3
K3gxYVPI030+mN8b3ISjuHyYILj7fET2DAGq4T8Vu48xgerhL3+mbgwpcTXN
j/2YYBr96dIzzPcj2eyotAAmnOb6Ks552BgOFp7bEBjEBNc9DWH9MjjP5U4t
+48zIXNF0iL3pn/vJ999akMo3q/ClS/dl4TgfnEl7nAmhKgPHvFQR76ZmWn5
FMGEmZ0Ou1ysUW8F2k49OYHr11HdKW+EfkGyWOlaFBNk4zrGEtDPTammvAs6
zYSyk8f+JmF+sdbzPW1yhgl61tZ//dAPPrQkN248y4Qvvw9q/0X93W+ld+LP
OcTjhcSm69jfz1badQ0XkB+m2y3tUc/DrLdK0i4yoZmhkL/zMwmChzb6Bccx
wb+TzX62xBhoh2SeGyYwYZlZZf1lzMeaNmLCa5MQXzOrV1/6SkCtjYjTYDLi
9e+KKSVBY3A8zF/09DLOy2LHZTnbSJg8zLUoOZUJWyNn6j9ifouznbVwSmOC
i0edj9ZF9LtHxij1a0yQ5+OJ7ElFPj8yOMmTyYTr/IHslnoSCLvPRu1ZTNh7
5F7fFsRXt13ntfxsJkwZiL2e4cV62jd/O3mDCd7CwwXKOE98DjU7THOZMG9w
/F0T+rUch4q49XQm3FX+lTiSQcLWo6UfxhlMWC/6UrXgCYlzWLTpFZMJI/sn
R5WxnnaO+VEZbOS34tXXfSoIGHWkN3jfZEK61GojBvLfBacs6V0FTOBUO/NO
4QAJEs5XAoRuM8Fud/Wf2gES7jnHlffeYUJf4j7ZF+4EGLnEiNy/y4TQd/mG
uzDPd7lEulwowvpFPNz/YoiAQNeg+zb3mWAifnXxV9Q3XjdvHuUHTHhj932+
F/Xtupuz9d+HTLjoyXYMwf2quduyGx8zQTq70TcrgYAqd/MZ2hOc32VbhH/6
kGDrQRLHnzHhRrzcu5JrJAx76GUZPcd6iL3elozzcc5T+8facuTbkdXPzqLf
FvXaqvOjggmxM+69Xgz0214bE5+9ZIJuxOPtDa37QN9bpjv5FRNmw9T8Ntwl
oN1bTNW5mgnc+18vC7tCgK+PSPS2GuyfZJXfWszbXMf4m3jrmBDd2uopif7h
2jEumY56JviFpomuRT7e5DsbVNDIBCGfgf+WY73Lfccqo5qQb69rOR1FvrL2
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
Y+gQNA458JQFz6R71WYEMP+rVSXKlyFf7UxZufIHASOWuqy/z1lQqHk/6hTi
4U/447LWcsSPt2pcDfqZxTnq729XIl9cl7KIPUWCSPnt4fNVLLiy+eyBJ/h8
qa+KfA6vkc+MviQ3vCdAaQl9neYbFhzdaMcOYBKwTUVix7Ja5PczDZv8V+H8
H0w/2F/Hgq9n1jmUXSLBOETYu6yBBVPHk2oy8bh1ZlxM+lvUh+TOWwvJBDg/
477u18yC984J9bHYb9/eU8VG71gQOcawWsB5COf5XSvVhvoUu4nvMfqXc0rB
fVPvWTCf+FVKdZKA5AM//zR0oJ4dU7i3J4GErECPVewPLNiXozSQg36Tldar
cvojPj//P0/xIMwDj48YHfrEAlOfN147h/fBs4+tDqq9uN8Tl+M8CjH/cJqF
Lf7CAuLsn/+Sz2AekK9J/tSH+7srcX3fMOo3YZD3sJ8FP72/XlUbRz/kW/Yi
+RsLlt6t87xw+t///2h1eAwi/lecKItA/8D1oGhUd4gFiszMWFHkv1PvakdN
fiGfaHVerLpOwuxY36j9CPLrTkJ0q96/v8ecHz02xgKBddHTgpgPR1XXjJ2Y
wP7qVxaHPiThmInaWNwUzssSHj47nLdvx4ixzBnU51nr1fGod67xzmN5syw4
qP002UCIhJ6bJ8Ye/mHBBuco/6eq6Kerr469mmdBeeUdgV4bEtr7b4+1crCh
il7rfx712JLn9VgfFxv8+Ko89NHPNsr2jI1zs+GtWpMxL/ojUu/3GNdiNhyb
UN9xV5qEV44iCEQ2RPXbJB7D+dU7rTy+ToANG9vshmJiMU/nGIyrLmVDnHmO
8THsh/ZT+/HdQmzwKr4qZrca570zdPzAcjb0vz1m65OFeeB38rjdCjYIFK1z
WoL1vr3m5rjPKjZ0Z4cbC6Eeb9CsGI9cw4Ztryb7rrWTQFl+GL8kygazdQ3W
Lehn1gVPjGeIsyHz4SrLDW8JyL68dIItyYb2t55bb9iRsPauwsQDaTYknVkt
tRLn8WqD7kTVevyZ2mT17/erwj9tJt7JsmFGZ53sDfTH8QJBE1/k2RCUHn9i
pTgJvBvjJ8YU2XBeuqOj9AsJMfuoCc6NbFDVlzVrWErCvPuzCeFNbDBdJV2q
fJiEyPNtE9Kb2TC3cHyCpoXzwRie2KzGhqtO1lWJzwgIquCb3LWVDcRtIuMq
8vmvnvWT+7exYZ/IBgsHNxK8FrQnj2iygXp/j3fkNeqXpOWktxYbTn2pkj3g
RYKjju9khDYbPn2UGDvsSECX7YXJizpsMHZS+7qqnACbiP8mr+3G6z+5+Rb/
+36Ba48mWcCG/Kkw7STMd2YPmiZL9NjgnrY6JBb9ed27wcmXBmxQ3K52J6Qe
9Wh80VSLERtq3M55+qFfrlguOfV5HxvyRrLV1h5Dv6KmOTVKYv2yk8SD/umD
iekUxwE2uJlfk6xnoz77ek4JmbLB/AR11cbKGIriz0xJHcR+ivrbn8N+b87P
mlKxYIP1OeLcBtST/OriKR0rNrQoyJVcwrwpP1A3ZXyIDfCBNZtVgfzJ0z9l
e5gNnSXerrGYLyTkFqa8jrDhJOeK+M+YbzP01k6H27OhudHyhWU/CSudtkzH
HmVD7Nr/7mw3QT92mpxOd2KDfdOWkCc4/wI3XKaZLmwY2V7ftB/974WnJ6fv
u7Fh1wZ2mh7qM9eHtOlKDzYcEotSy0K/e+r3nelmLzZ4Crgnny1D/K6pnu71
YYOhSXNPTBPiV7N3esSXDed+T9TFlyB+LWenF/zZ0MO9UlkG8fM/hv0RXA==

       "]]},
     Annotation[#, "Charting`Private`Tag$4375#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Game\"", TraditionalForm], 
    FormBox["\"Probability, %\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 2999.9999387959183`}, {-10., 100}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7142488841007833`*^9, 3.714249483474291*^9, 
  3.7143595806532207`*^9, 3.714371841906473*^9, 3.7144689142689962`*^9, 
  3.7145473115991316`*^9},ExpressionUUID->"f04b79dd-8c20-4339-9363-\
560fa299477c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{972, 988},
WindowMargins->{{Automatic, 335}, {Automatic, 110}},
PrintingPageRange->{Automatic, Automatic},
PageHeaders->{{None, None, None}, {
   Cell[
    TextData[{"KTH/ICT - Kommunikationssystem"}], "PageHeader", FontFamily -> 
    "Arial", FontSize -> 9], None, None}},
PageFooters->{{None, None, None}, {None, 
   Cell[
    TextData[{
      CounterBox["Page"]}], "PageNumber"], None}},
PrintingOptions->{"FacingPages"->False},
TrackCellChangeTimes->True,
Magnification:>1.8 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          StyleData["Title"], FontFamily -> "Arial", FontSize -> 36, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subtitle"], FontFamily -> "Arial", FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle"], FontFamily -> "Arial", FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter", "Subsection", 
          CellChangeTimes -> {{3.6182073006504073`*^9, 
           3.6182073204926414`*^9}}], 
         Cell[
          StyleData["Chapter"], FontFamily -> "Arial", FontSize -> 34, 
          FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Subchapter"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[
            0.09803921568627451, 0.32941176470588235`, 0.6509803921568628]], 
          FontFamily -> "Arial", FontSize -> 28, FontWeight -> "Plain", 
          FontSlant -> "Plain", 
          FontVariations -> {
           "StrikeThrough" -> False, "Underline" -> False}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section"], CellDingbat -> None, ShowGroupOpener -> True, 
          FontFamily -> "Arial", FontSize -> 24, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{40., 3.}, {8., 12.}}, FontFamily -> "Arial", 
          FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[0.3]], 
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{53., Inherited}, {2, 10}}, FontFamily -> 
          "Arial", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
          GrayLevel[0.]], 
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, MenuSortingValue -> 1400, FontFamily -> "Arial Narrow", 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          StyleData["Text"], FontFamily -> "Times"], 
         Cell[
          StyleData["SmallText"], MenuSortingValue -> 1425, FontFamily -> 
          "Times"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             StyleData["Item"], CellDingbat -> 
             StyleBox["\[FilledCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.5]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemNumbered"], FontFamily -> "Times"]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell["Templates", "Subsubsection"], 
            Cell[
             StyleData[
             "SideCaptionArray", StyleDefinitions -> StyleData["Text"]], 
             GridBoxOptions -> {
              GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}], 
            Cell[
             StyleData[
             "SideCaption", StyleDefinitions -> StyleData["SmallText"]]]}, 
           Closed]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], ShowCellBracket -> True], 
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True], 
      Cell[
       StyleData["Code"], ShowCellBracket -> True], 
      Cell[
       StyleData["Output"], ShowCellBracket -> True], 
      Cell[
       StyleData["Message"], ShowCellBracket -> True], 
      Cell[
       StyleData["Print"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["InlineFormula"]], 
      Cell[
       StyleData["DisplayFormula"], FontFamily -> "Times"], 
      Cell[
       StyleData["DisplayFormulaNumbered"], FontFamily -> "Times"], 
      Cell[
       StyleData["Program"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Citation Styles", "Section"], 
      Cell[
       StyleData["Reference"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Styles for ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " System\[Hyphen]specific Elements"}], "Section"], 
      Cell[
       CellGroupData[{
         Cell["Default Box Styles", "Subsection"], 
         Cell[
          StyleData["Graphics"], FontFamily -> "Times"], 
         Cell[
          StyleData["Graphics3D"], FontFamily -> "Times"], 
         Cell[
          StyleData["NetworkGraphics"], FontFamily -> "Times"]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Microsoft Windows (64-bit) (April 18, 2017)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 161, 3, 146, "Title", "ExpressionUUID" -> \
"2e086750-1cf1-4c43-bc57-bac07652a650"],
Cell[744, 27, 188, 6, 89, "Text", "ExpressionUUID" -> \
"679e81cd-23f2-4ac3-aad0-55498a6469d8"],
Cell[935, 35, 191, 4, 54, "Text", "ExpressionUUID" -> \
"afa24826-79d3-4461-8b2b-32cca5b0d79b"],
Cell[CellGroupData[{
Cell[1151, 43, 271, 5, 165, "Subchapter", "ExpressionUUID" -> \
"2760ab7a-2fed-4ae4-a63f-890119ad5062"],
Cell[CellGroupData[{
Cell[1447, 52, 154, 3, 107, "Section", "ExpressionUUID" -> \
"28ab532a-4f99-4328-b494-a8a51a0e3e70"],
Cell[CellGroupData[{
Cell[1626, 59, 81, 0, 73, "Subsection", "ExpressionUUID" -> \
"4df8543c-22f8-401d-8973-c66d5fa62864"],
Cell[1710, 61, 259, 6, 89, "Text", "ExpressionUUID" -> \
"8ad5d4da-afa2-434b-a402-a9f9b705fa59"],
Cell[CellGroupData[{
Cell[1994, 71, 79, 0, 51, "Item", "ExpressionUUID" -> \
"d60a637d-81bb-43c2-ad71-8c54fb5226d9"],
Cell[2076, 73, 80, 0, 51, "Item", "ExpressionUUID" -> \
"011f0fd9-9967-4501-8e5e-84a8fd1a10c2"],
Cell[2159, 75, 86, 0, 51, "Item", "ExpressionUUID" -> \
"a59ac132-dcbd-4077-91b9-c535e169b9ad"],
Cell[2248, 77, 85, 0, 51, "Item", "ExpressionUUID" -> \
"cd1ea2ae-e526-432b-a7a3-b43e960b2604"],
Cell[2336, 79, 85, 0, 51, "Item", "ExpressionUUID" -> \
"e940f617-aa4b-4725-bcf9-e3a0f8cd572c"],
Cell[2424, 81, 80, 0, 51, "Item", "ExpressionUUID" -> \
"4b1d0780-52e1-4fb4-a4c3-e737a09f80da"],
Cell[2507, 83, 79, 0, 51, "Item", "ExpressionUUID" -> \
"bf2eb308-5b1f-462a-ab6d-c89ce4f1fedb"],
Cell[2589, 85, 76, 0, 51, "Item", "ExpressionUUID" -> \
"59df8df0-f7a9-44ec-9ed3-3bc61b84f93d"],
Cell[2668, 87, 85, 0, 51, "Item", "ExpressionUUID" -> \
"233665f9-6e85-4606-b8ff-7db62cb33631"],
Cell[2756, 89, 78, 0, 51, "Item", "ExpressionUUID" -> \
"99715d1d-c1ba-4f49-9b33-ece4185850b4"]
}, Open  ]],
Cell[2849, 92, 1200, 20, 297, "Text", "ExpressionUUID" -> \
"6dafbe40-4c16-4c8f-b5a2-46153cbc8c47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4086, 117, 83, 0, 73, "Subsection", "ExpressionUUID" -> \
"39a0ef6c-6a2c-4081-9062-84513a76c571"],
Cell[4172, 119, 375, 7, 89, "Text", "ExpressionUUID" -> \
"6b796b68-57a1-44af-8380-a121bba6de31"],
Cell[4550, 128, 2964, 72, 515, "Text", "ExpressionUUID" -> \
"c105b4fe-e9bc-45df-add0-d8d5ef5c8e04"],
Cell[7517, 202, 71, 0, 54, "Text", "ExpressionUUID" -> \
"ebfbcb7d-c52e-4b9c-8db8-a0cbeb58f370"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7637, 208, 241, 4, 162, "Section", "ExpressionUUID" -> \
"6943093f-8a76-4b29-9b2d-76d8c3875b28"],
Cell[7881, 214, 5587, 120, 1850, "Text", "ExpressionUUID" -> \
"da7bd261-22e6-4ee2-ac49-4c4d2217f0eb"],
Cell[CellGroupData[{
Cell[13493, 338, 205, 4, 73, "Subsection", "ExpressionUUID" -> \
"c43ba815-6664-44c3-ac2c-bda286367b3a"],
Cell[13701, 344, 2350, 43, 622, "Text", "ExpressionUUID" -> \
"be16eaa7-812d-4218-8848-1190357c7d02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16088, 392, 254, 4, 73, "Subsection", "ExpressionUUID" -> \
"e86980e4-07dc-49ee-8d9f-086624e8e182"],
Cell[16345, 398, 1688, 31, 378, "Text", "ExpressionUUID" -> \
"6173cf32-5b9d-4839-a665-ba9f9f12ecb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18070, 434, 410, 6, 73, "Subsection", "ExpressionUUID" -> \
"c4d3c261-beef-45d0-bfe2-35f074c02627"],
Cell[18483, 442, 1906, 37, 308, "Text", "ExpressionUUID" -> \
"530afd40-d94b-42dc-b161-2b905b2c6eb8",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[20426, 484, 558, 8, 73, "Subsection", "ExpressionUUID" -> \
"f16df7d3-199e-49b2-8fb0-9decc20ab79f"],
Cell[20987, 494, 2124, 38, 238, "Text", "ExpressionUUID" -> \
"5854065f-affd-437a-a088-831a7681434e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23148, 537, 560, 8, 73, "Subsection", "ExpressionUUID" -> \
"f5802221-4084-466f-92b0-32129539a285"],
Cell[23711, 547, 2644, 46, 383, "Text", "ExpressionUUID" -> \
"70b00ae6-dcdd-4857-a372-c143b32051fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26392, 598, 604, 9, 73, "Subsection", "ExpressionUUID" -> \
"aa49615f-2e13-4f88-859e-9ea4b50bf90e"],
Cell[26999, 609, 1392, 31, 384, "Text", "ExpressionUUID" -> \
"38054122-fa0c-4f7a-a633-0ee13a11cb99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28428, 645, 656, 10, 73, "Subsection", "ExpressionUUID" -> \
"59e1487d-6dbb-489c-a3df-4259c5bed7eb"],
Cell[29087, 657, 2118, 45, 479, "Text", "ExpressionUUID" -> \
"f4417c28-828b-4976-ab2b-57c56858f489"],
Cell[31208, 704, 1269, 31, 414, "Text", "ExpressionUUID" -> \
"0cd7bebd-91d8-49c1-b3e0-f02ab4ff5645"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32514, 740, 699, 10, 73, "Subsection", "ExpressionUUID" -> \
"d0093db4-7fc5-4114-b3f8-98b4b6cef852"],
Cell[33216, 752, 1339, 22, 332, "Text", "ExpressionUUID" -> \
"21abbf4a-1e91-465f-9ac7-4eb56dee69ae"],
Cell[34558, 776, 749, 19, 134, "Text", "ExpressionUUID" -> \
"d3d6a35c-47da-48e8-8afe-0f96c897143c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35344, 800, 759, 11, 73, "Subsection", "ExpressionUUID" -> \
"5cf99b27-9dfe-444a-b9a5-68c61c066a4f"],
Cell[36106, 813, 2479, 52, 693, "Text", "ExpressionUUID" -> \
"9748f706-78f8-4a57-aa1e-73e982749c13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38622, 870, 806, 12, 73, "Subsection", "ExpressionUUID" -> \
"491ef180-c6e4-4b71-9597-11be725e01f4"],
Cell[39431, 884, 1330, 29, 443, "Text", "ExpressionUUID" -> \
"a0dc4331-a352-4913-97a7-127e7d72386c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40810, 919, 78, 0, 106, "Section", "ExpressionUUID" -> \
"066c3efd-8d4d-44ad-b557-0d5aba8e72a8"],
Cell[40891, 921, 221, 4, 54, "Input", "ExpressionUUID" -> \
"962866b0-0fbb-46d5-a6e5-2f8b1e1b8f40"],
Cell[41115, 927, 3368, 83, 565, "Input", "ExpressionUUID" -> \
"1b129bba-c87f-4ac9-89bf-1902f0dab439"],
Cell[CellGroupData[{
Cell[44508, 1014, 1968, 43, 259, "Input", "ExpressionUUID" -> \
"ca828e1b-f3fd-49dc-912c-ebbeba62212e"],
Cell[46479, 1059, 202, 4, 75, "Output", "ExpressionUUID" -> \
"dfe2e561-4067-45b2-8852-0a089f67b49b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46718, 1068, 1591, 39, 259, "Input", "ExpressionUUID" -> \
"5b2ee447-2a77-4eb8-847c-cda7d0e0c6fc"],
Cell[48312, 1109, 583, 10, 154, "Output", "ExpressionUUID" -> \
"2a757844-fff8-4815-ba07-d546cd203478"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48932, 1124, 2993, 63, 572, "Input", "ExpressionUUID" -> \
"9af91b89-895a-42c1-80ff-518344310387"],
Cell[51928, 1189, 532, 9, 154, "Output", "ExpressionUUID" -> \
"09faa63d-d27a-4233-8ba2-74b7fa6e088f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52497, 1203, 2395, 61, 772, "Input", "ExpressionUUID" -> \
"91cf8629-ffd4-4aa1-8a9d-7e2c48834c9b"],
Cell[54895, 1266, 399, 7, 154, "Output", "ExpressionUUID" -> \
"3396ff5b-a210-448d-9824-8b85f2f3b6f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55331, 1278, 2086, 51, 705, "Input", "ExpressionUUID" -> \
"33e91664-b242-4077-b733-c812bcce4393"],
Cell[57420, 1331, 395, 7, 154, "Output", "ExpressionUUID" -> \
"18fc8dad-bdf1-421f-af05-7415ef4735ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57852, 1343, 4319, 87, 838, "Input", "ExpressionUUID" -> \
"31642f31-9924-448a-8e18-9a3fad2d3a95"],
Cell[62174, 1432, 400, 7, 154, "Output", "ExpressionUUID" -> \
"19424517-fc41-41b2-8277-a91f700b4569"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62611, 1444, 3657, 91, 1038, "Input", "ExpressionUUID" -> \
"81ac2ed5-d27b-4435-8a58-5bd556220973"],
Cell[66271, 1537, 516, 9, 154, "Output", "ExpressionUUID" -> \
"d486fc19-8faa-49b3-9adb-45dca44602e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66824, 1551, 2765, 71, 905, "Input", "ExpressionUUID" -> \
"7066f2cb-7320-4823-97f6-22fced22954d"],
Cell[69592, 1624, 375, 7, 154, "Output", "ExpressionUUID" -> \
"55e8ec33-971c-4e45-86e2-3eef797fd0f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70004, 1636, 3094, 78, 1105, "Input", "ExpressionUUID" -> \
"26e7ebed-3b0e-47d3-a64d-cf308fa6a118"],
Cell[73101, 1716, 381, 7, 154, "Output", "ExpressionUUID" -> \
"42b684ed-5d66-451f-8a63-a21cdc48699a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73519, 1728, 2216, 55, 639, "Input", "ExpressionUUID" -> \
"7d33b503-b30d-4dfc-b832-a54c62105ce1"],
Cell[75738, 1785, 302, 6, 154, "Output", "ExpressionUUID" -> \
"a5ba6d01-3f90-43fd-aeb8-af8167198075"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76101, 1798, 255, 4, 165, "Subchapter", "ExpressionUUID" -> \
"3943a846-eea4-4876-95a3-e517dcb28f22"],
Cell[CellGroupData[{
Cell[76381, 1806, 151, 3, 107, "Section", "ExpressionUUID" -> \
"e6a616d4-9e7d-476e-afdb-eddb5992ee51"],
Cell[CellGroupData[{
Cell[76557, 1813, 81, 0, 73, "Subsection", "ExpressionUUID" -> \
"30dd1399-d4ec-49a0-8fd5-70a0b5dbf7c9"],
Cell[76641, 1815, 466, 8, 159, "Text", "ExpressionUUID" -> \
"4b9863a3-9714-4d46-af7e-1010ac8a6d7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77144, 1828, 83, 0, 73, "Subsection", "ExpressionUUID" -> \
"394dfc0c-0a0a-4238-9a08-e687e1d6a870"],
Cell[77230, 1830, 314, 7, 89, "Text", "ExpressionUUID" -> \
"b8b7b611-babf-4e64-b546-5b4091945469"],
Cell[77547, 1839, 1766, 41, 336, "DisplayFormula", "ExpressionUUID" -> \
"1297dab3-2c38-475a-92ba-1ebf17cb4d49"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79362, 1886, 276, 6, 307, "Section", "ExpressionUUID" -> \
"c2b2532e-7205-4e61-be8b-ba541fb9b59e"],
Cell[CellGroupData[{
Cell[79663, 1896, 348, 6, 140, "Subsection", "ExpressionUUID" -> \
"ae1f4b0a-f1a2-41f3-b21e-71b67866bce1"],
Cell[80014, 1904, 4459, 124, 1278, "Text", "ExpressionUUID" -> \
"ff13703d-203d-4967-a5ec-dcecc91f0ea3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84510, 2033, 349, 6, 140, "Subsection", "ExpressionUUID" -> \
"21f71e93-af09-4404-a22e-a268bb8095cf"],
Cell[84862, 2041, 4169, 109, 1081, "Text", "ExpressionUUID" -> \
"aaa308aa-4bbe-4048-a936-302c00fdbe73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89068, 2155, 378, 6, 140, "Subsection", "ExpressionUUID" -> \
"e7fef8c7-98f4-4e67-b82c-e9970108a52f"],
Cell[89449, 2163, 4131, 116, 1029, "Text", "ExpressionUUID" -> \
"e55ce36d-b431-407f-b3e1-3388dfd49e50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93617, 2284, 352, 6, 140, "Subsection", "ExpressionUUID" -> \
"cd0c338d-9510-4eed-b719-0076d92ca1f2"],
Cell[93972, 2292, 3834, 105, 950, "Text", "ExpressionUUID" -> \
"bf0f5e7a-9793-4b33-9aef-a3f07846c8fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97843, 2402, 352, 6, 140, "Subsection", "ExpressionUUID" -> \
"1ea478ad-b0d0-4a48-b01e-5926ecc3900d"],
Cell[98198, 2410, 2990, 84, 694, "Text", "ExpressionUUID" -> \
"07ebcf99-50ce-40f7-98e2-d021de373c19"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101237, 2500, 78, 0, 203, "Section", "ExpressionUUID" -> \
"7070a222-c954-44f1-b08f-19eccd9931ef"],
Cell[101318, 2502, 149, 3, 102, "Text", "ExpressionUUID" -> \
"137f45b8-466e-4b12-a245-358ba9a900e9"],
Cell[CellGroupData[{
Cell[101492, 2509, 744, 21, 306, "Input", "ExpressionUUID" -> \
"3f8072dc-c651-4631-9a78-250eaf88d6b5"],
Cell[102239, 2532, 302, 6, 154, "Output", "ExpressionUUID" -> \
"e21be6a7-36e2-4697-96ed-4db3354ccbaf"]
}, Open  ]],
Cell[102556, 2541, 204, 4, 102, "Text", "ExpressionUUID" -> \
"c1117599-a9f1-4e33-a3da-2e7df13141f5"],
Cell[CellGroupData[{
Cell[102785, 2549, 673, 20, 306, "Input", "ExpressionUUID" -> \
"14a7af2b-aff4-417f-b8c1-a00955798001"],
Cell[103461, 2571, 303, 6, 154, "Output", "ExpressionUUID" -> \
"c0190e8f-8a0c-494e-8287-a2ad4fe596b3"]
}, Open  ]],
Cell[103779, 2580, 156, 3, 102, "Text", "ExpressionUUID" -> \
"1b566564-6dc4-4b53-8c8a-53f2d54ec2db"],
Cell[CellGroupData[{
Cell[103960, 2587, 573, 16, 239, "Input", "ExpressionUUID" -> \
"1171a6e4-df71-4d36-a3d2-d32639938f47"],
Cell[104536, 2605, 302, 6, 154, "Output", "ExpressionUUID" -> \
"9c9bff1f-bc30-4b08-9762-602c688af593"]
}, Open  ]],
Cell[104853, 2614, 152, 3, 102, "Text", "ExpressionUUID" -> \
"79963b45-092c-4041-b115-dca4868e6f4c"],
Cell[CellGroupData[{
Cell[105030, 2621, 731, 19, 239, "Input", "ExpressionUUID" -> \
"b7de0ab2-7b63-457c-a58a-4990b11ffa5e"],
Cell[105764, 2642, 299, 6, 154, "Output", "ExpressionUUID" -> \
"f087c866-6658-4a3e-8f31-2b4bf2bdf6d8"]
}, Open  ]],
Cell[106078, 2651, 153, 3, 102, "Text", "ExpressionUUID" -> \
"8c2b51a8-bd0f-4864-ac1f-76a453a70220"],
Cell[CellGroupData[{
Cell[106256, 2658, 503, 14, 239, "Input", "ExpressionUUID" -> \
"18290eac-1ee8-456f-8c6a-4b6306e1b3a6"],
Cell[106762, 2674, 300, 6, 154, "Output", "ExpressionUUID" -> \
"c4b82aaf-72d7-4599-aeb3-2bef2bc3c903"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107123, 2687, 251, 4, 315, "Subchapter", "ExpressionUUID" -> \
"058e3f1a-ad0a-4b1f-b272-2e194e45a5d3"],
Cell[CellGroupData[{
Cell[107399, 2695, 152, 3, 203, "Section", "ExpressionUUID" -> \
"e18d813d-c3a0-4ec2-8487-1710e6d33005"],
Cell[CellGroupData[{
Cell[107576, 2702, 81, 0, 140, "Subsection", "ExpressionUUID" -> \
"8ef397d5-65d7-43b5-81d7-0e0ae1b7d706"],
Cell[107660, 2704, 652, 12, 367, "Text", "ExpressionUUID" -> \
"792326df-9f8d-4e89-a3c0-2d11fbb08008"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108349, 2721, 83, 0, 140, "Subsection", "ExpressionUUID" -> \
"f6e4317a-39c6-4e8a-bbe6-2a04bb1896cf"],
Cell[108435, 2723, 663, 13, 433, "Text", "ExpressionUUID" -> \
"0e99f7ad-4d42-4fe6-aec4-402f6f963a2c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109147, 2742, 200, 3, 307, "Section", "ExpressionUUID" -> \
"76d2d6b7-d4c6-4119-8b16-f3a781920f15"],
Cell[CellGroupData[{
Cell[109372, 2749, 178, 3, 140, "Subsection", "ExpressionUUID" -> \
"21ead853-d031-4e23-913a-7aa253b1eb5d"],
Cell[109553, 2754, 1330, 24, 1027, "Text", "ExpressionUUID" -> \
"e5b96b34-4cdc-4f35-b163-21b0d37f7862"],
Cell[110886, 2780, 2302, 49, 1071, "Text", "ExpressionUUID" -> \
"30151a46-c2fc-4e8d-9002-a859712771a0"],
Cell[113191, 2831, 234, 6, 169, "Text", "ExpressionUUID" -> \
"a50c6d79-690a-43e9-b46e-00e87dac7a0f"],
Cell[113428, 2839, 1390, 28, 437, "DisplayFormula", "ExpressionUUID" -> \
"4290f13e-9f01-45bc-9c3a-2aaeeec4452f"],
Cell[114821, 2869, 64893, 1081, 1564, "Input", "ExpressionUUID" -> \
"c262232c-8a66-4563-b807-333472bdc5c3"],
Cell[179717, 3952, 440, 9, 154, "SmallText", "ExpressionUUID" -> \
"b9907cd1-024e-474c-a409-d27f2c2acac5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180206, 3967, 78, 0, 203, "Section", "ExpressionUUID" -> \
"fbd1f9a1-a6d0-4050-b121-9116ab4235d0"],
Cell[180287, 3969, 282, 6, 169, "Text", "ExpressionUUID" -> \
"41e0dfa2-3dc5-4e02-a854-537a69808475"],
Cell[180572, 3977, 391, 9, 239, "Input", "ExpressionUUID" -> \
"736102ad-33f4-423f-9812-af53ab6c1716"],
Cell[180966, 3988, 296, 6, 169, "Text", "ExpressionUUID" -> \
"acfb4b77-c204-409a-add6-765978ef40ce"],
Cell[181265, 3996, 352, 9, 172, "Input", "ExpressionUUID" -> \
"9a5a65b7-f670-4645-8e51-6698e0cc392b"],
Cell[181620, 4007, 296, 7, 169, "Text", "ExpressionUUID" -> \
"90b8ae16-7bdf-43e5-8d0a-c48d7ce37f03"],
Cell[CellGroupData[{
Cell[181941, 4018, 503, 14, 239, "Input", "ExpressionUUID" -> \
"ae849b93-454f-4cfb-a31d-cf63d5440ba9"],
Cell[182447, 4034, 8063, 213, 590, "Output", "ExpressionUUID" -> \
"e8c15e02-d86a-40bc-8e82-211f880b99bc"]
}, Open  ]],
Cell[190525, 4250, 234, 6, 169, "Text", "ExpressionUUID" -> \
"20f319d2-e37e-4c44-a474-02182aa0deb5"],
Cell[190762, 4258, 692, 20, 172, "Input", "ExpressionUUID" -> \
"50b8a279-954b-451b-9acc-5e93c515e7f6"],
Cell[191457, 4280, 253, 5, 169, "Text", "ExpressionUUID" -> \
"c684ff3d-6083-44de-be3e-31f9bc759196"],
Cell[CellGroupData[{
Cell[191735, 4289, 825, 21, 239, "Input", "ExpressionUUID" -> \
"a803976f-344c-4914-b84b-94f955d43743"],
Cell[192563, 4312, 64498, 1075, 756, "Output", "ExpressionUUID" -> \
"f04b79dd-8c20-4339-9363-560fa299477c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

